

@using Microsoft.Data.SqlClient;
@using System.Security.Claims
@{
    Layout = "~/Views/Shared/_LayoutPaycell.cshtml";
    ViewData["Title"] = "مشاهده بیمه درمان";

    var per = new System.Globalization.PersianCalendar();
    var perYear = per.GetYear(DateTime.Now);
    var persianToday = per.GetYear(DateTime.Now) + "/" + per.GetMonth(DateTime.Now) + "/" + per.GetDayOfMonth(DateTime.Now);
}
<h1>@ViewData["Title"]</h1>

@if (ViewBag.OfflineInsurance != null)
{
    <script type="text/javascript">
        var JsonDataOfTreatment = JSON.parse('@Html.Raw(ViewBag.OfflineInsurance.Replace("\\r", "").Replace("\\n","").Replace("<br />","").Replace("<br >","").Replace("<br>",""))');
        JsonDataOfTreatment = JsonDataOfTreatment[0];
    </script>
}
<div class="row bordergreen">
    <input id="allpage" type="checkbox" />
    <label for="allpage">
        مشاهده همه صفحات؟
    </label>
</div>
<form>
    @Html.Hidden("WorkFlowId", 1035)
    @Html.Hidden("ShoppingPageId", 1018)
    <div class="row bordergreen">
        <fieldset id="packageFieldset" class="allpart d-none">
            <legend>طرح انتخابی</legend>
            <div class="form-group">
                <label for="type_of_treatment">نوع بیمه</label>
                <select name="type_of_treatment" id="type_of_treatment" class="form-control sample" required>
                    <option value="">لطفا انتخاب کنید</option>
                    <option value="1">انفرادی</option>
                    @*<option value="2">شرکتی</option>*@
                </select>
                <span validation-for="type_of_treatment" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="has_base_insurancer">آیا بیمه گر پایه دارید؟</label>
                <select name="has_base_insurancer" id="has_base_insurancer" class="form-control sample" required>
                    <option value="">لطفا انتخاب کنید</option>
                    <option value="1">تامین اجتماعی</option>
                    <option value="2">خدمات درمانی</option>
                    <option value="3">نیروهای مصلح</option>
                    <option value="4">بانک ها</option>
                    <option value="5">بیمه سلامت</option>
                    <option value="6">ایرانیان</option>
                    <option value="7">فاقد بیمه گر پایه</option>
                </select>
                <span validation-for="has_base_insurancer" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="age">سن بیمه شونده</label>
                <select name="age" id="age" class="form-control sample" required>
                    <option value="">لطفا انتخاب کنید</option>
                    @for (int i = 0; i < 70; i++)
                    {
                        <option value="@i">@i</option>
                    }
                </select>
                <span validation-for="age" class="text-danger"></span>
                @*<script type="text/javascript">
                        document.querySelector('#age option[value="30"]').setAttribute('selected', '');
                    </script>*@
            </div>
            <div class="form-group">
                <label for="package_id">بیمه انتخاب شده</label>
                <select name="package_id" id="package_id" class="form-control sample" required>
                    <option value="">لطفا انتخاب کنید</option>
                </select>
                <span validation-for="package_id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="PayCountInYear">نحوه پرداخت بیمه</label>
                <select name="PayCountInYear" id="PayCountInYear" class="form-control sample" required>
                    <option value="">ابتدا بیمه را انتخاب کنید</option>
                </select>
                <span validation-for="PayCountInYear" class="text-danger"></span>
            </div>
            <div class="form-group" id="ins-desc">

            </div>
        </fieldset>
        <fieldset id="searchFieldset" class="allpart d-none">
            <legend>جست و جوی بیمه شونده</legend>
            <div id="befDiv" class="form-group col-xs-12">
                <div class="form-group col-sm-4">
                    <label for="searchNationalCode">کد ملی</label>
                    <input id="searchNationalCode" type="text" required maxlength="10" class="form-control" />
                    <span validation-for="searchNationalCode" class="text-danger"></span>
                </div>
                <div class="form-group col-sm-4">
                    <label for="" class="col-sm-12">&nbsp;</label>
                    <button class="btn btn-default" id="SearchPerson" type="button">جست و جو</button>
                </div>
            </div>
        </fieldset>
        @*<div class="form-group">
                <a href="" target="_blank" class="btn btn-primary" id="plan-Link-Url" >دانلود مستند</a>
                <label >دانلود مستند تعریف طرح انتخابی</label>
            </div>*@
        <fieldset id="FirstFieldset" class="allpart d-none">
            <legend>اطلاعات بیمه شونده</legend>
            <div class="form-group">
                <label for="agent_national_code">کد ملی</label>
                <input name="agent_national_code" id="agent_national_code" type="text" readonly required maxlength="10" class="form-control" />
                <span validation-for="agent_national_code" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="agent_name">نام</label>
                <input name="agent_name" id="agent_name" class="form-control" type="text" required />
                <span validation-for="agent_name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="agent_lastname">نام خانوادگی</label>
                <input name="agent_lastname" id="agent_lastname" class="form-control" type="text" required />
                <span validation-for="agent_lastname" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="agent_birth_year">تاریخ تولد</label>
                <input name="agent_birth_year" id="agent_birth_year" required class="form-control persian-date" />
                <span validation-for="agent_birth_year" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="agent_mobile">شماره موبایل</label>
                <input name="agent_mobile" id="agent_mobile" class="form-control" type="number" required max="9999999999" min="9000000000" />
                <span validation-for="agent_mobile" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="ProvinceId">استان</label>
                <select name="agent_province_id" id="ProvinceId" required class="form-control Province"><option value="">لطفا انتخاب کنید</option></select>
                <span validation-for="ProvinceId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="holder_city_id">شهر</label>
                <select name="agent_city_id" id="holder_city_id" required class="form-control"><option value="">ابتدا استان را انتخاب نمایید</option></select>
                <span validation-for="holder_city_id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="agent_address">آدرس</label>
                <input name="agent_address" id="agent_address" class="form-control" type="text" required />
                <span validation-for="agent_address" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="agent_postal_code">کد پستی</label>
                <input name="agent_postal_code" id="agent_postal_code" class="form-control" type="number" required />
                <span validation-for="agent_postal_code" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label for="agent_weight">وزن</label>
                <input name="agent_weight" id="agent_weight" class="form-control" type="number" required />
                <span validation-for="agent_weight" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="agent_height">قد</label>
                <input name="agent_height" id="agent_height" class="form-control" type="number" required />
                <span validation-for="agent_height" class="text-danger"></span>
            </div>
            <div>
                <input type="hidden" name="agent_Sport" value="0"><input id="agent_Sport" type="checkbox" onclick="this.previousSibling.value=1-this.previousSibling.value">
                <label for="agent_Sport">
                    ورزش حرفه ای انجام میدهید؟
                </label>
            </div>
            <div>
                <input type="hidden" name="agent_Cigarette" value="0"><input id="agent_Cigarette" type="checkbox" onclick="this.previousSibling.value=1-this.previousSibling.value">
                <label for="agent_Cigarette">
                    آیا سیگاری هستید؟
                </label>
            </div>
            <div>
                <input type="hidden" name="agent_Motor" value="0"><input id="agent_Motor" type="checkbox" onclick="this.previousSibling.value=1-this.previousSibling.value">
                <label for="agent_Motor">
                    آیا از موتور سیکلت به طور مداوم استفاده می نمایید؟
                </label>
            </div>
            <div class="form-group">
                <input type="hidden" name="sick2" value="0"><input id="sick2" type="checkbox" onclick="this.previousSibling.value=1-this.previousSibling.value">
                <label for="sick2">آیا بیماری خاصی دارید؟</label>
            </div>
            <div class="form-group" id="sickesList_2" style="display:none">
                <fieldset>
                    <legend>لیست بیماری ها:</legend>
                    <div>
                        <input type="checkbox" name="agent_has_disability" id="sickesList_2_2" value="1" />
                        <label for="sickesList_2_2">
                            آیا دچار نقص عضو یا از کار افتادگی میباشید؟
                        </label>
                    </div>
                    <div>
                        <input type="checkbox" name="agent_has_operation" id="sickesList_2_3" value="1" />
                        <label for="sickesList_2_3">
                            آیا تا به حال عمل جراحی انجام دادهاید؟
                        </label>
                    </div>
                    <div>
                        <input type="checkbox" name="agent_has_breath" id="sickesList_2_4" value="1" />
                        <label for="sickesList_2_4">
                            آیا دارای سابقه بیماریهای قلبی، دستگاه گردش خون (مانند سکته قلبی یا مغزی)، اعصاب و روان (مانند صرع یا افسردگی)، دستگاه تنفس، دستگاه گوارش،
                            دستگاه ادراری – تناسلی، مفاصل و استخوانها، غدد داخلی (مانند دیابت)، انواع سرطان و بیماریهای خود ایمنی و یا هر نوع بیماری مزمن دیگر میباشید؟
                        </label>
                    </div>
                    <div>
                        <input type="checkbox" name="agent_has_family_sickness" id="sickesList_2_5" value="1" />
                        <label for="sickesList_2_5">
                            آیا در بین افراد درجه یک خانواده شما فردی به بیماری خاصی مبتلا است؟
                        </label>
                    </div>
                    <div>
                        <input type="checkbox" name="agent_has_care_doctor" id="sickesList_2_6" value="1" />
                        <label for="sickesList_2_6">
                            آیا در حال حاضر تحت نظر یا درمان پزشک می باشید ؟
                        </label>
                    </div>
                </fieldset>

            </div>
            <div>
                <input type="hidden" name="agent_taking_medicine" value="0"><input id="agent_taking_medicine" type="checkbox" onclick="this.previousSibling.value=1-this.previousSibling.value">
                <label for="agent_taking_medicine">
                    آیا دارویی مصرف میکنید؟
                </label>
            </div>
            <div class="form-group">
                <label for="agent_taking_medicine_names">نام داروها</label>
                <input name="agent_taking_medicine_names" id="agent_taking_medicine_names" class="form-control" type="text" />
                <span validation-for="agent_taking_medicine_names" class="text-danger"></span>
            </div>
        </fieldset>
        <fieldset id="searchFieldset2" class="allpart d-none">
            <div class="form-group">
                <label for="IBAN">شماره شبا *</label>
                <input type="text" id="IBAN" name="IBAN" required class="form-control" />
                <span validation-for="IBAN" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="IDFirstPage">عکس از کارت ملی *</label>
                <img id="IDFirstPage" width="250" />
                <a id="IDFirstPageDownload" class="btn btn-primary" href="">دانلود</a>
            </div>
            <div class="form-group">
                <label for="BirthCertificatePage">عکس از شناسنامه *</label>
                <img id="BirthCertificatePage" width="250" />
                <a id="BirthCertificatePageDownload" class="btn btn-primary" href="">دانلود</a>
            </div>
            <div class="form-group">
                <input type="hidden" name="consaltant_needed" value="0"><input id="consaltant_needed" type="checkbox" onclick="this.previousSibling.value=1-this.previousSibling.value">
                <label for="consaltant_needed">
                    نیاز به مشاوره تلفنی دارم؟
                </label>
                <span validation-for="consaltant_needed" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="call_date">
                    تاریخ تماس کارشناس
                </label>
                <input id="call_date" name="call_date" type="text" class="form-control persian-date" />
                <span validation-for="call_date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="call_time">
                    ساعت تماس کارشناس
                </label>
                <select name="call_time" id="call_time" class="form-control sample">
                    <option value="">لطفا انتخاب کنید</option>
                    @for (int i = 10; i < 17; i++)
                    {
                        <option value="@(i)_00">@i:00</option>
                        <option value="@(i)_15">@i:15</option>
                        <option value="@(i)_30">@i:30</option>
                        <option value="@(i)_45">@i:45</option>
                    }
                </select>
                <span validation-for="call_time" class="text-danger"></span>
            </div>
        </fieldset>

        <button class="btn btn-primary d-none" type="button" id="btn-bef">صفحه قبل</button>
        <button class="btn btn-success float-left d-none" type="button" id="btn-nex">صفحه بعد</button>
    </div>
</form>


<script type="text/javascript">
    var pageInd = 0;
    var glob_CityId = 0;
    function CheckValidity(elem,isReport,errorTxt) {
        elem.setCustomValidity('');
        if (isReport && errorTxt) {
            elem.setCustomValidity(errorTxt);
            $('[validation-for=' + $(elem).attr('id') + ']').html(errorTxt)
            elem.reportValidity();
            return true;
        }
        if (elem.validity.valueMissing) {
            if ($(elem).attr('type') && $(elem).attr('type') == "number") {
                elem.setCustomValidity('این فیلد اجباری است، اعداد بصورت زبان انگلیسی باید وارد شوند.');
                $('[validation-for=' + $(elem).attr('id') + ']').html('این فیلد اجباری است، اعداد بصورت زبان انگلیسی باید وارد شوند.')
                if (isReport)
                    elem.reportValidity();
            }
            else {
                elem.setCustomValidity('این فیلد اجباری است، لطفا تکمیل نمایید.');
                $('[validation-for=' + $(elem).attr('id') + ']').html('این فیلد اجباری است، لطفا تکمیل نمایید.')
                if (isReport)
                    elem.reportValidity();
            }

            return true;
        }
        if ($(elem).attr('id') == "owner_mobile" || $(elem).attr('id') == "agent_mobile") {
            if (elem.validity.rangeOverflow || elem.validity.rangeUnderflow) {
                $('[validation-for=' + $(elem).attr('id') + ']').html('لطفا شماره همراه صحیح وارد نمایید.')
                elem.setCustomValidity('لطفا شماره همراه صحیح وارد نمایید');
                if (isReport)
                    elem.reportValidity();
            }
        }
        return true;
    }
    function validationPaging() {
        $('span.text-danger').html('');
        var isValid = true;
        switch (pageInd) {
            case 0: {
                $('#packageFieldset input').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this,true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });
                $('#packageFieldset select').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this, true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });
                //packageFieldset
                break;
            }
            case 1: {
                $('#searchFieldset input').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this, true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });
                $('#searchFieldset select').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this, true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });
                if (validateNationalCode($('#searchFieldset input').val()) == false) {

                    CheckValidity($('#searchFieldset input')[0], true, 'کد ملی صحیح نیست');
                    isValid = false;
                    return isValid;
                }
                //searchFieldset
                break;
            }
            case 2: {
                $('#FirstFieldset input').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this, true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });
                $('#FirstFieldset select').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this, true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });
                //=====================================================================================
                $('#FirstFieldset .persian-date').each(function (index, elem) {
                    var isValidDate = $(this).ShamsiDatePickerValidate();
                    if (isValidDate == true) {

                    } else {

                        isValid = false;
                        CheckValidity(this, true, isValidDate);
                        return isValid;
                    }
                });
                if ($('#agent_job_id').val() && ($('#agent_job_id').val().trim() == 'آزاد' || $('#agent_job_id').val().trim() == 'ازاد')) {

                    isValid = false;
                    CheckValidity($('#agent_job_id')[0], true, 'لطفا عنوان شغل آزاد خود را مطرح نمایید');
                    return isValid;
                }
                if (validateNationalCode($('#agent_national_code').val()) == false) {

                    CheckValidity($('#agent_national_code')[0], true, 'کد ملی صحیح نیست');
                    isValid = false;
                    return isValid;
                }
                var sickList = false;
                var sickElem;
                $('#FirstFieldset [name=sickesList]').each(function () {
                    sickList = sickList || $(this).prop('checked');
                    if ($(this).prop('checked'))
                        sickElem = this;
                });
                if (sickList) {
                    CheckValidity(sickElem, true, 'در صورت وجود هر یک از بیماری های گفته شده امکان خرید بیمه وجود ندارد');
                    isValid = false;
                    return isValid;
                }
                //FirstFieldset
                break;
            }
            case 3: {
                $('#searchFieldset2 input').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this, true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });
                $('#searchFieldset2 select').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this, true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });
                //IsOnPerson
                break;
            }
            case 4: {
                $('#searchFieldset2 input').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this, true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });
                $('#searchFieldset2 select').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this, true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });

                if (validateNationalCode($('#searchFieldset2 input').val()) == false) {
                    CheckValidity($('#searchFieldset2 input')[0], true, 'کد ملی صحیح نیست');
                    isValid = false;
                    return isValid;
                }
                //searchFieldset2
                break;
            }
            case 5: {
                $('#SecondFieldset input').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this, true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });
                $('#SecondFieldset select').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this, true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });

                //=====================================================================================
                $('#SecondFieldset .persian-date').each(function (index, elem) {
                    var isValidDate = $(this).ShamsiDatePickerValidate();
                    if (isValidDate == true) {

                    } else {
                        isValid = false;
                        CheckValidity(this, true, isValidDate);
                        return isValid;
                    }
                });

                break;
            }
            case 6: {
                $('#ThirdFieldset input').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this, true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });
                $('#ThirdFieldset select').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this, true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });
                //ThirdFieldset
                break;
            }
        }
        return isValid;
    }
    function paging() {
        switch (pageInd) {
            case 0: {
                $('.allpart').hide();
                $('#btn-bef').hide();
                $('#btn-pay').hide();
                $('#btn-nex').show();
                $('#packageFieldset').show();
                break;
            }
            case 1: {
                $('.allpart').hide();
                $('#btn-bef').show();
                $('#btn-pay').hide();
                $('#btn-nex').show();
                $('#searchFieldset').show();
                break;
            }
            case 2: {
                $('#btn-bef').show();
                $('#btn-pay').hide();
                $('#btn-nex').show();
                $('.allpart').hide();
                $('#FirstFieldset').show();
                break;
            }
            case 3: {
                $('#btn-bef').show();
                $('#btn-pay').show();
                $('#btn-nex').hide();
                $('.allpart').hide();
                $('#searchFieldset2').show();
                break;
            }
        }
    }
    function validateNationalCode(nc) {
        var sumNaCode = 0;
        for (var i = 0; i < nc.length - 1; i++) {
            sumNaCode = sumNaCode + parseInt(nc[i]) * (10 - i);
        }
        console.log(sumNaCode);
        console.log(sumNaCode % 11);
        if (sumNaCode % 11 < 2) {
            if ((sumNaCode % 11).toString() == nc[9])
                return true;
        } else {
            if ((11 - (sumNaCode % 11)).toString() == nc[9])
                return true;
        }
        return false;
    }
    function getAge() {
        return parseInt('@perYear') - getYear($('#owner_birth_year').val());
    }

    function getYear(birth) {
        return getEngNumber(birth.toString().split('/')[0]);
    }
    function getEngNumber(num) {
        return num.split('١').join('1')
            .split('۱').join('1')
            .split('٢').join('2')
            .split('۲').join('2')
            .split('٣').join('3')
            .split('۳').join('3')
            .split('٤').join('4')
            .split('۴').join('4')
            .split('٥').join('5')
            .split('۵').join('5')
            .split('٦').join('6')
            .split('۶').join('6')
            .split('٧').join('7')
            .split('۷').join('7')
            .split('٨').join('8')
            .split('۸').join('8')
            .split('٩').join('9')
            .split('۹').join('9')
            .split('٠').join('0')
            .split('۰').join('0');
    }
    function digitGroup(num) {
        return num.toLocaleString();
    }
    var packageJson;
    var reportName = "mostamarri";
    var loaddata = false;
    if (document.addEventListener) {
        document.addEventListener("DOMContentLoaded", init, false);
    }
    else {
        document.attachEvent("onDOMContentLoaded", init);
    }
    function init() {


        $('#allpage').on('change', function () {
            if ($(this).prop('checked')) 
                $('.allpart').show();
            else
                paging();
        });
        $('#allpage').trigger('change');

        $.get('/JsonData/GetData?typeData=100025', function (data) {
            var jsonData = JSON.parse(data);
            var strCombo = '<option value="">لطفا انتخاب کنید</option>';
            for (var i = 0; i < jsonData.length; i++) {
                strCombo += '<option value="' + jsonData[i].ProvinceID+ '">' + jsonData[i].Name + '</option>';

            }
            $('#ProvinceId').html(strCombo);
            glob_CityId = JsonDataOfTreatment.agent_city_id;

            $('#ProvinceId').on('change', function () {
                $('#holder_city_id').html('<option value="">لطفا صبر کنید</option>');
                $.get('/JsonData/GetData?typeData=100026&key1=' + $('#ProvinceId').val(), function (data) {
                    var jsonData = JSON.parse(data);
                    var strCombo = '<option value="">لطفا انتخاب کنید</option>';
                    for (var i = 0; i < jsonData.length; i++) {
                        strCombo += '<option value="' + jsonData[i].id.toString()  + '">' + jsonData[i].CityName + '</option>';
                    }
                    $('#holder_city_id').html(strCombo);
                    if (glob_CityId > 0) {
                        $('#holder_city_id').val(glob_CityId);
                        $('#holder_city_id').trigger('change');
                    }
                });

            });
            $('#ProvinceId').val(JsonDataOfTreatment.agent_province_id);
            $('#ProvinceId').trigger('change');
        });
        $.get('/JsonData/GetData?typeData=100037', function (data) {
            var jsonData = JSON.parse(data);
            packageJson = jsonData;
            var strCombo = '<option value="">لطفا انتخاب کنید</option>';
            for (var i = 0; i < jsonData.length; i++) {
                strCombo += '<option value="' + jsonData[i].TreatmentPackageId.toString() + '">' + jsonData[i].Title + ' - ' + calcAmountByAge(jsonData[i]) + ' ريال</option>';
            }
            $('#package_id').html(strCombo);
            $('#package_id').on('change', LoadPayType);

            if (JsonDataOfTreatment.package_id) {
                $('#package_id').val(JsonDataOfTreatment.package_id);
                $('#package_id').trigger('change');
            }
            if (JsonDataOfTreatment.age) {
                $('#age').val(JsonDataOfTreatment.age);
                $('#age').trigger('change');
            }
        });

        $('#age').on("change", function () {
            var strCombo = '<option value="">لطفا انتخاب کنید</option>';
            for (var i = 0; i < packageJson.length; i++) {
                strCombo += '<option value="' + packageJson[i].TreatmentPackageId.toString() + '">' + packageJson[i].Title + ' - ' + calcAmountByAge(packageJson[i]) + ' ريال</option>';
            }
            $('#package_id').html(strCombo);
            $('#package_id').on('change', LoadPayType);
            if (JsonDataOfTreatment.package_id) {
                $('#package_id').val(JsonDataOfTreatment.package_id);
                $('#package_id').trigger('change');
            }
        });

        $('#agent_Military_Service').on('change', function () {
            if ($('#agent_Military_Service').val() == 3) {
                $('#agent_Military_Service_Reason').parent().show();
                $('#agent_Military_Service_Reason').attr('required','');
            } else {
                $('#agent_Military_Service_Reason').parent().hide();
                $('#agent_Military_Service_Reason').removeAttr('required');
            }
        });
        $('#agent_IsMan').on('change', function () {
            if ($('#agent_IsMan').val()=="1") {
                $('#agent_Military_Service').parent().show();
                $('#agent_Military_Service').attr('required', '');
                $('#agent_Military_Service').trigger('change');
            } else {
                $('#agent_Military_Service').parent().hide();
                $('#agent_Military_Service').removeAttr('required');
                $('#agent_Military_Service_Reason').parent().hide();
            }
        });
        $('#agent_FatherIsAlive').on('change', function () {
            if ($('#agent_FatherIsAlive').val() == "1" ||  !$('#agent_FatherIsAlive').val()) {
                $('#agent_FatherAge').parent().find('label').html('سن پدر');
                $('#agent_FatherReasonOfDead').parent().hide();
                $('#agent_FatherReasonOfDead').removeAttr('required');
            } else {
                $('#agent_FatherAge').parent().find('label').html('سن فوت پدر');
                $('#agent_FatherReasonOfDead').parent().show();
                $('#agent_FatherReasonOfDead').attr('required', '');
            }
        });
        $('#agent_MotherIsAlive').on('change', function () {
            if ($('#agent_MotherIsAlive').val()=="1" || !$('#agent_MotherIsAlive').val()) {
                $('#agent_MotherReasonOfDead').parent().hide();
                $('#agent_MotherAge').parent().find('label').html('سن مادر');
                $('#agent_MotherReasonOfDead').removeAttr('required');
            } else {
                $('#agent_MotherReasonOfDead').parent().show();
                $('#agent_MotherAge').parent().find('label').html('سن فوت مادر');
                $('#agent_MotherReasonOfDead').attr('required', '');
            }
        });
        $('#agent_MotherIsAlive').trigger('change');
        $('#agent_FatherIsAlive').trigger('change');
        $('#agent_IsMan').trigger('change');
        $('#agent_Military_Service').trigger('change');

        $('#owner_Military_Service').on('change', function () {
            if ($('#owner_Military_Service').val() == 3) {
                $('#owner_Military_Service_Reason').parent().show();
                $('#owner_Military_Service_Reason').attr('required','');
            } else {
                $('#owner_Military_Service_Reason').parent().hide();
                $('#owner_Military_Service_Reason').removeAttr('required');
            }
        });
        $('#owner_IsMan').on('change', function () {
            if ($('#owner_IsMan').val()=="1") {
                $('#owner_Military_Service').parent().show();
                $('#owner_Military_Service').attr('required', '');
                $('#owner_Military_Service').trigger('change');
            } else {
                $('#owner_Military_Service').parent().hide();
                $('#owner_Military_Service').removeAttr('required');
                $('#owner_Military_Service_Reason').parent().hide();
            }
        });
        $('#owner_FatherIsAlive').on('change', function () {
            if ($('#owner_FatherIsAlive').val()=="1" || !$('#owner_FatherIsAlive').val()) {
                $('#owner_FatherAge').parent().find('label').html('سن پدر');
                $('#owner_FatherReasonOfDead').parent().hide();
                $('#owner_FatherReasonOfDead').removeAttr('required');
            } else {
                $('#owner_FatherReasonOfDead').parent().show();
                $('#owner_FatherReasonOfDead').attr('required', '');
                $('#owner_FatherAge').parent().find('label').html('سن فوت پدر');
            }
        });
        $('#owner_MotherIsAlive').on('change', function () {
            if ($('#owner_MotherIsAlive').val()=="1" || !$('#owner_MotherIsAlive').val()) {
                $('#owner_MotherReasonOfDead').parent().hide();
                $('#owner_MotherReasonOfDead').removeAttr('required');
                $('#owner_MotherAge').parent().find('label').html('سن مادر');
            } else {
                $('#owner_MotherReasonOfDead').parent().show();
                $('#owner_MotherReasonOfDead').attr('required', '');
                $('#owner_MotherAge').parent().find('label').html('سن فوت مادر');
            }
        });
        $('#owner_taking_medicine').on('change', function () {
            if ($('#owner_taking_medicine').prop("checked") == false) {
                $('#owner_taking_medicine_names').parent().hide();
                $('#owner_taking_medicine_names').removeAttr('required');
            } else {
                $('#owner_taking_medicine_names').parent().show();
                $('#owner_taking_medicine_names').attr('required', '');
            }
        });
        $('#agent_taking_medicine').on('change', function () {
            if ($('#agent_taking_medicine').prop("checked") == false) {
                $('#agent_taking_medicine_names').parent().hide();
                $('#agent_taking_medicine_names').removeAttr('required');
            } else {
                $('#agent_taking_medicine_names').parent().show();
                $('#agent_taking_medicine_names').attr('required', '');
            }
        });
        $('#owner_taking_medicine').trigger('change');
        $('#agent_taking_medicine').trigger('change');
        $('#owner_MotherIsAlive').trigger('change');
        $('#owner_FatherIsAlive').trigger('change');
        $('#owner_IsMan').trigger('change');
        $('#owner_Military_Service').trigger('change');

        try {
            $('.jalaliDatePicker').remove();
            $('.persian-date').each(function (index, elem) {
                if ($(this).val())
                    ;
                else
                    if ($(this).attr('id')=="call_date")
                        $(this).val('@persianToday');
                    else
                        $(this).val('1360/06/15');
                $(this).ShamsiDatePicker(false);
            });
        } catch (e) {

        }
        $('#consaltant_needed').on('change', function () {
            if ($(this).prop('checked')) {
                $('#call_date').parent().show();
                $('#call_time').parent().show();
                $('#call_time').attr('required','');
                $('#call_date').attr('required', '');
            }
            else {
                $('#call_date').parent().hide();
                $('#call_time').parent().hide();
                $('#call_date').removeAttr('required');
                $('#call_time').removeAttr('required');
            }
        });
        $('#consaltant_needed').trigger('change');
        $('#sick').on('change', function () {
            if ($(this).prop('checked'))
                $('#sickesList').show();
            else
                $('#sickesList').hide();
        });
        $('#sick2').on('change', function () {
            if ($(this).prop('checked'))
                $('#sickesList_2').show();
            else
                $('#sickesList_2').hide();
        });
        $('#agent_national_code').on('change', function () {
            if (validateNationalCode($('#agent_national_code').val()) == false) {
                CheckValidity($('#agent_national_code')[0], true, 'کد ملی صحیح نیست');
            }

        });

        $('form').submit(function (e) {

            $('form input[type=number],form input[type=text]').each(function () {
                if ($(this).val())
                    $(this).val(getEngNumber($(this).val()));
            });

            $('.persian-date').each(function (index, elem) {
                var isValid = $(this).ShamsiDatePickerValidate();
                if (isValid == true) {

                } else {
                    e.preventDefault();
                    CheckValidity(this, true, isValid);
                    $(this).focus();
                }
            });

            if (validateNationalCode($('#agent_national_code').val()) == false) {
                CheckValidity($('#agent_national_code')[0], true, 'کد ملی صحیح نیست');
                e.preventDefault();
            }
            $('#agent_birth_year').val(getEngNumber($('#agent_birth_year').val()));
        });
        var SearchPersonclick = false;
        $('#SearchPerson').on('click', function () {
            SearchPersonclick = true;
            //$('#btn-nex').trigger('click');
            //SearchPersonclick = false;
            //$('#FirstFieldset input').each(function () {
            //    if (!$(this).attr('type') || $(this).attr('type') == "text" || $(this).attr('type') == "number")
            //        $(this).val('');
            //    else if (!$(this).attr('type') || $(this).attr('type') == "checkbox") {
            //        $(this).prop('checked', false)
            //        $(this).trigger('change');
            //    }
            //});
            //$('#FirstFieldset select').each(function () {
            //    $(this).val('');
            //    $(this).trigger('change');
            //});
            //$('#agent_national_code').val($('#searchNationalCode').val());
            //$.get('/JsonData/GetData?typeData=100036&key10=' + $('#searchNationalCode').val(), function (data) {
            //    var jsonData = JSON.parse(data);
            //    showLoadedData(jsonData, 'payer');
            //    $('.jalaliDatePicker').remove();

            //    $('.persian-date').each(function (index, elem) {
            //        if ($(this).val())
            //            ;
            //        else
            //            $(this).val('1360/06/15');
            //        $(this).ShamsiDatePicker(false);
            //    });
            //});

        });
        $('#agent_Insurancer_Is_One').trigger('change');
        $('#agent_Insurancer_Is_One').trigger('change');
        $('#btn-bef').on('click', function () {
            if (pageInd == 6 && $('#agent_Insurancer_Is_One').prop('checked'))
                pageInd-=2;
            pageInd--;
            if (pageInd < 0)
                pageInd = 0;
            paging();
        });
        $('#btn-nex').on('click', function () {
            //if (validationPaging() == false) {
            //    return;
            //}
            if (pageInd == 1) {
                if ($("#agent_national_code").val())
                    ;
                else {
                    if (SearchPersonclick == false) {
                        $("#SearchPerson").trigger("click");
                        return;
                    }
                }
            }
            if (pageInd == 4) {
                if ($("#owner_national_code").val())
                    ;
                else {
                    if (SearchPersonclick == false) {
                        $("#owner_SearchPerson").trigger("click");
                        return;
                    }
                }
            }
            //if (pageInd == 3 && $('#agent_Insurancer_Is_One').prop('checked'))
            //    pageInd+=2;
            pageInd++;
            if (pageInd > 5)
                pageInd = 5;
            paging();
        });
        $('#btn-pay').on('click', function () {
            if(validationPaging())
                $('form').submit();
        });
        try {

            $('select:not(.sample)').select2({
                minimumInputLength: 0 // only start searching when the user has input 3 or more characters
            });
        } catch (e) {

        }
        showLoadedData(JsonDataOfTreatment, 'payer');

    }
    function calcAmountByAge(package) {
        var age = $('#age').val();
        if (age) {
            age = parseInt(age);
            if (0 <= age && age <= 15) {
                return "حق بیمه " + digitGroup(package.AmountFor0_15);
            } else if (16 <= age && age <= 50) {
                return "حق بیمه " + digitGroup(package.AmountFor16_50);
            } else if (51 <= age && age <= 60) {
                return "حق بیمه " + digitGroup(package.AmountFor51_60);
            } else if (61 <= age && age <= 70) {
                return "حق بیمه " + digitGroup(package.AmountFor61_70);
            } else {
                return "در گروه سنی بیش از 70 این بیمه ارائه نمیشود";
            }
        }
        else {
            return "ابتدا سن را انتخاب کنید";
        }
    }
    function calcOnlyAmountByAge() {
        var id = $('#package_id').val();
        if (packageJson && packageJson.length > 0) {
            var package = packageJson.filter(function (r) { return r.TreatmentPackageId == id });
            package = package[0];
            var age = $('#age').val();
            if (age) {
                age = parseInt(age);
                if (0 <= age && age <= 15) {
                    return  (package.AmountFor0_15);
                } else if (16 <= age && age <= 50) {
                    return  (package.AmountFor16_50);
                } else if (51 <= age && age <= 60) {
                    return  (package.AmountFor51_60);
                } else if (61 <= age && age <= 70) {
                    return  (package.AmountFor61_70);
                } else {
                    return 0;
                }
            }
            else {
                return 0;
            }
        }
    }
    function LoadPayType() {
        if (packageJson && packageJson.length > 0) {
            var id = $('#package_id').val();
            var i = 0;
            for (; i < packageJson.length; i++) {
                if (packageJson[i].TreatmentPackageId == id) {
                    //        var strCombo = '<option value="">لطفا انتخاب کنید</option>';
                    //        if (packageJson[i].OneYearAmount) {
                    //            strCombo += '<option value="1">سالانه - ' + digitGroup(packageJson[i].OneYearAmount) + 'ريال' + '</option>';
                    //        }
                    //        if (packageJson[i].SixMonthAmount) {
                    //            strCombo += '<option value="2">شش ماه یکبار - ' + digitGroup(packageJson[i].SixMonthAmount) + 'ريال' + '</option>';
                    //        }
                    //        if (packageJson[i].ThirdMonthAmount) {
                    //            strCombo += '<option value="4">سه ماه یکبار - ' + digitGroup(packageJson[i].ThirdMonthAmount) + 'ريال' + '</option>';
                    //        }
                    //        if (packageJson[i].OneMonthAmount) {
                    //            strCombo += '<option value="12">هر ماه یکبار - ' + digitGroup(packageJson[i].OneMonthAmount) + 'ريال' + '</option>';
                    //        }
                    //        $('#PayCountInYear').html(strCombo);
                    break;
                }
            }

            var data = '<div class="insurance row">'
                + '        <div class="col-sm-12">'
                + '<div class="col-sm-6 col-sm-offset-3">'
                + '<label class="cl-right">عنوان طرح :</label><label class="cl-left">' + packageJson[i].Title + '</label>'
                + '</div>'
                + '<div class="col-sm-6 col-sm-offset-3">'
                + '<label class="cl-right">بیمارستانی :</label><label class="cl-left">' + digitGroup(packageJson[i].Hospital) + ' ريال </label>'
                + '</div>'
                + '<div class="col-sm-6 col-sm-offset-3">'
                + '<label class="cl-right">اعمال جراحی مهم با احتساب بند یک :</label><label class="cl-left">' + digitGroup(packageJson[i].Operation) + ' ريال </label>'
                + '</div>'
                + '<div class="col-sm-6 col-sm-offset-3">'
                + '<label class="cl-right">پاراکیلینیکی نوع اول :</label><label class="cl-left">' + digitGroup(packageJson[i].ParaClinincType1) + ' ريال </label>'
                + '</div>'
                + '<div class="col-sm-6 col-sm-offset-3">'
                + '<label class="cl-right">پاراکیلینیکی نوع دوم :</label><label class="cl-left">' + digitGroup(packageJson[i].ParaClinincType2) + ' ريال </label>'
                + '</div>'
                + '<div class="col-sm-6 col-sm-offset-3">'
                + '<label class="cl-right">جراحی مجاز سرپایی :</label><label class="cl-left">' + digitGroup(packageJson[i].VirtualOperation) + ' ريال </label>'
                + '</div>'
                + '<div class="col-sm-6 col-sm-offset-3">'
                + '<label class="cl-right">آزمایشگاهی :</label><label class="cl-left">' + digitGroup(packageJson[i].Library) + ' ريال </label>'
                + '</div>'
                + '<div class="col-sm-6 col-sm-offset-3">'
                + '<label class="cl-right">هزینه آمبولانس :</label><label class="cl-left">' + digitGroup(packageJson[i].Ambulance) + ' ريال </label>'
                + '</div>'
                + '<div class="col-sm-6 col-sm-offset-3">'
                + '<label class="cl-right">زایمان :</label><label class="cl-left">' + digitGroup(packageJson[i].Childbirth) + ' ريال </label>'
                + '</div>'
                + '<div class="col-sm-6 col-sm-offset-3">'
                + '<label class="cl-right">ویزیت دارو :</label><label class="cl-left">' + digitGroup(packageJson[i].Visit) + ' ريال </label>'
                + '</div>'
                + '<div class="col-sm-6 col-sm-offset-3">'
                + '<label class="cl-right">دندانپزشکی :</label><label class="cl-left">' + digitGroup(packageJson[i].Dentist) + ' ريال </label>'
                + '</div>'
                + '<div class="col-sm-6 col-sm-offset-3">'
                + '<label class="cl-right">نازایی :</label><label class="cl-left">' + digitGroup(packageJson[i].Infertility) + ' ريال </label>'
                + '</div>'
                + '<div class="col-sm-6 col-sm-offset-3">'
                + '<label class="cl-right">رفع عیوب انکساری دو چشم :</label><label class="cl-left">' + digitGroup(packageJson[i].Eyes) + ' ريال </label>'
                + '</div>'
                + '<div class="col-sm-6 col-sm-offset-3">'
                + '<label class="cl-right">سمعک :</label><label class="cl-left">' + digitGroup(packageJson[i].HearingAids) + ' ريال </label>'
                + '</div>'
                + '        </div>'
                + '    </div>';
            $('#ins-desc').html(data);
            var amount = calcOnlyAmountByAge();
            var strInstallment =
                "<option value=''>لطفا انتخاب کنید</option>"
                + "<option value='1'>نقد " + digitGroup(amount) + ' ريال با 10% تخفیف ' + digitGroup(Math.floor(amount * 0.9)) + ' ريال </option>'
                + "<option value='2'>هر ششماه یکبار " + digitGroup(Math.floor(amount / 2)) + ' ريال </option>'
                + "<option value='4'>هر سه ماه یکبار " + digitGroup(Math.floor(amount / 4)) + ' ريال </option>'
                + "<option value='12'>ماهانه " + digitGroup(Math.floor(amount / 12 * 3)) + ' ريال نقد و 9 قسط' + digitGroup(Math.floor(amount / 12)) + ' ريال </option>';
            $('#PayCountInYear').html(strInstallment);
            if (JsonDataOfTreatment.PayCountInYear)
                $('#PayCountInYear').val(JsonDataOfTreatment.PayCountInYear);
        }
    }
    function showLoadedData(data, who) {
        //if (data && data.length > 0)
        //    data = data[0];
        //else
        //    data = {};
        if (who == 'payer') {
            if (data.agent_name) {
                $('#agent_name').val(data.agent_name);
                $('#agent_name').attr('readonly', "");
            } else {
                $('#agent_name').removeAttr("readonly")
            }
            if (data.agent_lastname) {
                $('#agent_lastname').val(data.agent_lastname);
                $('#agent_lastname').attr('readonly', "");
            } else {
                $('#agent_lastname').removeAttr("readonly")
            }
            if (data.agent_national_code)
                $('#agent_national_code').val(data.agent_national_code);
            if (data.agent_IsMan) {
                $('#agent_IsMan').val(data.agent_IsMan ? 1 : 0);
                $('#agent_IsMan').trigger('change');
            }
            if (data.agent_owner_relation)
                $('#relation').val(data.agent_owner_relation);
            if (data.agent_city_id)
                glob_CityId = data.agent_city_id;
            if (data.agent_province_id) {
                $('#ProvinceId').val(data.agent_province_id);
                $('#ProvinceId').trigger('change');
            }
            if (data.agent_Military_Service) {
                $('#agent_Military_Service').val(data.agent_Military_Service);
                $('#agent_Military_Service').trigger('change');
            }
            if (data.agent_Military_Service_Reason)
                $('#agent_Military_Service_Reason').val(data.agent_Military_Service_Reason);
            if (data.agent_FatherIsAlive) {
                $('#agent_FatherIsAlive').val(data.agent_FatherIsAlive ? 1 : 0);
                $('#agent_FatherIsAlive').trigger('change');
            }
            if (data.agent_FatherAge)
                $('#agent_FatherAge').val(data.agent_FatherAge);
            if (data.agent_FatherReasonOfDead)
                $('#agent_FatherReasonOfDead').val(data.agent_FatherReasonOfDead);
            if (data.agent_MotherIsAlive) {
                $('#agent_MotherIsAlive').val(data.agent_MotherIsAlive ? 1 : 0);
                $('#agent_MotherIsAlive').trigger('change');
            }
            if (data.agent_MotherAge)
                $('#agent_MotherAge').val(data.agent_MotherAge);
            if (data.agent_MotherReasonOfDead)
                $('#agent_MotherReasonOfDead').val(data.agent_MotherReasonOfDead);
            if (data.agent_birth_year)
                $('#agent_birth_year').val(data.agent_birth_year);
            if (data.agent_job_id) {
                $('#agent_job_id').val(data.agent_job_id);
                $('#agent_job_id').trigger('change');
            }
            if (data.agent_mobile)
                $('#agent_mobile').val(data.agent_mobile);
            if (data.agent_mobile)
                $('#agent_mobile').val(data.agent_mobile);
            if (data.agent_address)
                $('#agent_address').val(data.agent_address);
            if (data.agent_postal_code)
                $('#agent_postal_code').val(data.agent_postal_code.trim());
            if (data.agent_weight)
                $('#agent_weight').val(data.agent_weight);
            if (data.agent_height)
                $('#agent_height').val(data.agent_height);

            if (data.agent_phone)
                $('#agent_phone').val(data.agent_phone);
            if (data.agent_Sport) {
                $('#agent_Sport').prop('checked', data.agent_Sport);
                $('#agent_Sport').trigger('change');
            }
            if (data.agent_Cigarette) {
                $('#agent_Cigarette').prop('checked', data.agent_Cigarette);
                $('#agent_Cigarette').trigger('change');
            }
            if (data.agent_Motor) {
                $('#agent_Motor').prop('checked', data.agent_Motor);
                $('#agent_Motor').trigger('change');
            }
            if (data.agent_taking_medicine) {
                $('#agent_taking_medicine').prop('checked', true);
                $('#agent_taking_medicine').trigger('change');
            }
            if (data.agent_taking_medicine_names) {
                $('#agent_taking_medicine_names').val(data.agent_taking_medicine_names);
            }
            if (data.agent_weight)
                $('#agent_weight').val(data.agent_weight);
            if (data.agent_height)
                $('#agent_height').val(data.agent_height);

            if (data.agent_phone)
                $('#agent_phone').val(data.agent_phone);
            if (data.agent_Sport) {
                $('#agent_Sport').prop('checked', data.agent_Sport);
                $('#agent_Sport').trigger('change');
            }
            if (data.agent_Cigarette) {
                $('#agent_Cigarette').prop('checked', data.agent_Cigarette);
                $('#agent_Cigarette').trigger('change');
            }
            if (data.agent_Motor) {
                $('#agent_Motor').prop('checked', data.agent_Motor);
                $('#agent_Motor').trigger('change');
            }
            if (data.agent_taking_medicine) {
                $('#agent_taking_medicine').prop('checked', data.agent_taking_medicine);
                $('#agent_taking_medicine').trigger('change');
            }
            if (data.agent_taking_medicine_names) {
                $('#agent_taking_medicine_names').val(data.agent_taking_medicine_names);
            }
            var spSick = false;
            if (data.agent_has_disability) {
                $('[name=agent_has_disability]').prop('checked', true);
                spSick = true;
            }
            if (data.agent_has_operation) {
                $('[name=agent_has_operation]').prop('checked', true);
                spSick = true;
            }
            if (data.agent_has_breath) {
                $('[name=agent_has_breath]').prop('checked', true);
                spSick = true;
            }
            if (data.agent_has_family_sickness) {
                $('[name=agent_has_family_sickness]').prop('checked', true);
                spSick = true;
            }
            if (data.agent_has_care_doctor) {
                $('[name=agent_has_care_doctor]').prop('checked', true);
                spSick = true;
            }
            if (spSick) {
                $('#sick2').prop('checked', true);
                $('#sick2').trigger('change');
            }

            if (data.agent_taking_medicine_names) {
                $('#agent_taking_medicine_names').val(data.agent_taking_medicine_names);
            }
            if (data.IBAN) {
                $('#IBAN').val(data.IBAN);
            }

            if (data.IDFirstPage) {
                $('#IDFirstPage').attr('src', '/Info/DownloadFiles?fileName=thirdparty/' + GetCorrectFilename(data.IDFirstPage));
                $('#IDFirstPageDownload').attr('href', '/Info/DownloadFiles?fileName=thirdparty/' + GetCorrectFilename(data.IDFirstPage));
            }
            if (data.BirthCertificatePage) {
                $('#BirthCertificatePage').attr('src', '/Info/DownloadFiles?fileName=thirdparty/' + GetCorrectFilename(data.BirthCertificatePage));
                $('#BirthCertificatePageDownload').attr('href', '/Info/DownloadFiles?fileName=thirdparty/' + GetCorrectFilename(data.BirthCertificatePage));
            }
            if (data.age) {
                $('#age').val(data.age);
            }
            if (data.type_of_treatment) {
                $('#type_of_treatment').val(data.type_of_treatment);
            }
            if (data.has_base_insurancer) {
                $('#has_base_insurancer').val(data.has_base_insurancer);
            }
        }
        //else {

        //    if (data.agent_name) {
        //        $('#owner_name').val(data.agent_name);
        //        $('#owner_name').attr('readonly', "");
        //    } else {
        //        $('#owner_name').removeAttr("readonly")
        //    }
        //    if (data.agent_lastname) {
        //        $('#owner_lastname').val(data.agent_lastname);
        //        $('#owner_lastname').attr('readonly', "");
        //    } else {
        //        $('#owner_lastname').removeAttr("readonly")
        //    }
        //    if (data.agent_national_code)
        //        $('#owner_national_code').val(data.agent_national_code);
        //    if (data.agent_IsMan) {
        //        $('#owner_IsMan').val(data.agent_IsMan ? 1 : 0);
        //        $('#owner_IsMan').trigger('change');
        //    }
        //    if (data.agent_Military_Service) {
        //        $('#owner_Military_Service').val(data.agent_Military_Service);
        //        $('#owner_Military_Service').trigger('change');
        //    }
        //    if (data.agent_Military_Service_Reason)
        //        $('#owner_Military_Service_Reason').val(data.agent_Military_Service_Reason);
        //    if (data.agent_FatherIsAlive) {
        //        $('#owner_FatherIsAlive').val(data.agent_FatherIsAlive ? 1 : 0);
        //        $('#owner_FatherIsAlive').trigger('change');
        //    }
        //    if (data.agent_FatherAge)
        //        $('#owner_FatherAge').val(data.agent_FatherAge);
        //    if (data.agent_FatherReasonOfDead)
        //        $('#owner_FatherReasonOfDead').val(data.agent_FatherReasonOfDead);
        //    if (data.agent_MotherIsAlive) {
        //        $('#owner_MotherIsAlive').val(data.agent_MotherIsAlive ? 1 : 0);
        //        $('#owner_MotherIsAlive').trigger('change');
        //    }
        //    if (data.agent_MotherAge)
        //        $('#owner_MotherAge').val(data.agent_MotherAge);
        //    if (data.agent_MotherReasonOfDead)
        //        $('#owner_MotherReasonOfDead').val(data.agent_MotherReasonOfDead);
        //    if (data.agent_birth_year)
        //        $('#owner_birth_year').val(data.agent_birth_year);
        //    if (data.agent_job_id) {
        //        $('#owner_job_id').val(data.agent_job_id);
        //        $('#owner_job_id').trigger('change');
        //    }
        //    if (data.agent_Sport) {
        //        $('#owner_Sport').prop('checked', data.agent_Sport);
        //        $('#owner_Sport').trigger('change');
        //    }
        //    if (data.agent_Cigarette) {
        //        $('#owner_Cigarette').prop('checked', data.agent_Cigarette);
        //        $('#owner_Cigarette').trigger('change');
        //    }
        //    if (data.agent_Motor) {
        //        $('#owner_Motor').prop('checked', data.agent_Motor);
        //        $('#owner_Motor').trigger('change');
        //    }
        //    if (data.agent_weight)
        //        $('#owner_weight').val(data.agent_weight);
        //    if (data.agent_height)
        //        $('#owner_height').val(data.agent_height);

        //    if (data.agent_taking_medicine) {
        //        $('#owner_taking_medicine').prop('checked', data.agent_taking_medicine);
        //        $('#owner_taking_medicine').trigger('change');
        //    }
        //    if (data.agent_taking_medicine_names) {
        //        $('#owner_taking_medicine_names').val(data.agent_taking_medicine_names);
        //    }
        //}
    }


    function GetCorrectFilename(filename) {
        var fileNameSplit = filename.toString().split('_');
        for (var i = 0; i < fileNameSplit.length; i++) {
            if (i > 0 && i < fileNameSplit.length - 1)
                filename += "_" + fileNameSplit[i];
            else if (i == 0)
                filename = fileNameSplit[i];
            else
                filename += "." + fileNameSplit[i];
        }
        return filename;
    }
</script>

