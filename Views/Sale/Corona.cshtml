
@using Microsoft.Data.SqlClient;
@{

    var db = new DataAccess();
    var usersDt = db.ProccessSelectQuery("sp_getCoronaProduct", new SqlParameter[] {
                new SqlParameter("@username",User.Identity.Name),
                }, System.Data.CommandType.StoredProcedure);
    var dtList = usersDt.Select().Select(r => new { code = r["CoronaProductId"]+"*"+ r["PlanExId"] + "*" + r["DurationDay"], title = r["Title"] }).ToList();
    var dtSelect = new SelectList(dtList, "code", "title");

    var per = new System.Globalization.PersianCalendar();
    var perYear = per.GetYear(DateTime.Now);
}
<script type="text/javascript">

</script>
<form action="/Info/ShoppingData" method="post">
    @Html.Hidden("WorkFlowId", 1029)
    @Html.Hidden("ShoppingPageId", 1013)
    @Html.Hidden("ContractNo", "")
    @Html.Hidden("PlanExid", "")
    @Html.Hidden("CoveredDays", "")
    <div class="row bordergreen">
        <div>
            <div class="form-group col-sm-6">
                <input type="checkbox" id="forMySelf" />
                <label for="forMySelf">خرید برای خودم</label>
            </div>
            <div class="form-group col-sm-6">
                <input type="checkbox" id="beforeCustomer" />
                <label for="beforeCustomer">خرید برای مشتریان قبلی</label>
            </div>
        </div>
        <div id="befDiv" style="display:none">
            <select id="beforeSelect" class="form-control sample"></select>
        </div>
        <fieldset>
            <legend>خرید برای فرد جدید</legend>

            <div class="form-group col-sm-4">
                <label for="NationalCode_new">کد ملی</label>
                <input id="NationalCode_new" type="text" required maxlength="10" class="form-control" />
            </div>
            <div class="form-group col-sm-4">
                <label for="birthdate_new">تاریخ تولد</label>
                <input id="birthdate_new" class="form-control persian-date" />
            </div>
            <div class="form-group col-sm-4">
                <label for="" class="col-sm-12">&nbsp;</label>
                <button class="btn btn-default" id="SearchPerson" type="button">جست و جو</button>
            </div>
        </fieldset>
        <div class="form-group">
            <label for="NationalCode">کد ملی</label>
            <input name="NationalCode" id="NationalCode" readonly type="text" required maxlength="10" class="form-control" oninput="CheckValidity(this);" oninvalid="CheckValidity(this);" />
            <span validation-for="NationalCode" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label for="FirstName">نام</label>
            <input name="FirstName" id="FirstName" readonly class="form-control" type="text" required oninput="CheckValidity(this);" oninvalid="CheckValidity(this);" />
            <span validation-for="FirstName" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label for="LastName">نام خانوادگی</label>
            <input name="LastName" id="LastName" readonly class="form-control" type="text" required oninput="CheckValidity(this);" oninvalid="CheckValidity(this);" />
            <span validation-for="LastName" class="text-danger"></span>
        </div>
        <div class="form-group" id="divBirthDate">
            <label for="BirthDate">تاریخ تولد</label>
            <input name="BirthDate" id="BirthDate"  readonly class="form-control" oninput="CheckValidity(this);" oninvalid="CheckValidity(this);" />
            <span validation-for="BirthDate" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label for="IsMan">جنسیت:</label>
            <label for="man">مرد</label>
            <input name="IsMan" id="man" type="radio" checked value="true" oninput="CheckValidity(this);" oninvalid="CheckValidity(this);" />
            <label for="woman">زن</label>
            <input name="IsMan" id="woman" type="radio" value="false" oninput="CheckValidity(this);" oninvalid="CheckValidity(this);" />
            <span validation-for="IsMan" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label for="Mobile">شماره موبایل</label>
            <input name="Mobile" id="Mobile" class="form-control" type="number" required max="9999999999" min="9000000000" oninput="CheckValidity(this);" oninvalid="CheckValidity(this);" />
            <span validation-for="Mobile" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label for="Address">آدرس</label>
            <input name="Address" id="Address" class="form-control" type="text" oninput="CheckValidity(this);" required oninvalid="CheckValidity(this);" />
            <span validation-for="Address" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label for="PostalCode">کد پستی</label>
            <input name="PostalCode" id="PostalCode" class="form-control" type="number" oninput="CheckValidity(this);" required oninvalid="CheckValidity(this);" />
            <span validation-for="PostalCode" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label for="plan">طرح بیمه کرونا</label>
            <select class="form-control " id="plan" required name="plan" asp-items="@dtSelect" oninput="CheckValidity(this);" oninvalid="CheckValidity(this);"><option value="">لطفا انتخاب کنید</option></select>
        </div>
        <div></div>
        <button class="btn btn-warning form-control" type="submit">خرید</button>
    </div>
</form>


<script type="text/javascript">
    var glob_CityId = 0;
    function CheckValidity(elem) {
        elem.setCustomValidity('');
        if (elem.validity.valueMissing) {
            elem.setCustomValidity('این فیلد اجباری است، اعداد بصورت زبان انگلیسی باید وارد شوند');
            return true;
        }
        //if ($(elem).attr('id') == "NationalCode") {
        //    //if (validateNationalCode($(elem).val()))
        //    elem.setCustomValidity($(elem).val());//'کد ملی صحیح نیست');
        //}
        if ($(elem).attr('id') == "Mobile") {
            if (elem.validity.rangeOverflow || elem.validity.rangeUnderflow)
                elem.setCustomValidity('لطفا شماره همراه صحیح وارد نمایید');
        }
        return true;
    }

    document.addEventListener("DOMContentLoaded", function (event) {
        var pdCal = $('.persian-date').each(function (index, elem) {
            $(this).persianDatepicker({
                //altField: "#alt" + (index + 1).toString(),
                altFormat: 'LLLL',
                initialValue: false,
                observer: true,
                format: 'YYYY/MM/DD',
                //timePicker: {
                //    enabled: true
                //}
            });
        });
        //$('#sick').on('change', function () {
        //    if ($(this).prop('checked'))
        //        $('#sickesList').show();
        //    else
        //        $('#sickesList').hide();
        //})
        $('#NationalCode').on('change', function () {
            if (validateNationalCode($('#NationalCode').val()) == false) {
                alert('کد ملی صحیح نیست');
                $('#NationalCode').focus();
            }
            //$('#NationalCode').setCustomValidity("کد ملی صحیح نیست");

            //alert('کد ملی صحیح نیست');
        });

        $('form').submit(function (e) {
            if (validateNationalCode($('#NationalCode').val()) == false) {
                alert('کد ملی صحیح نیست');
                $('#NationalCode').focus();
                e.preventDefault();
            }
            //if (getAge() > 55) {

            //    alert('بیمه فقط برای افراد کمتر از 56 سال صادر می شود');
            //    e.preventDefault();
            //}
            $('#BirthDate').val(getEngNumber($('#BirthDate').val()));
            $('#PlanExid').val($('#plan').val().split('*')[1]);
            $('#CoveredDays').val($('#plan').val().split('*')[2]);
            //var sickList = false;
            //$('[name=sickesList]').each(function () {
            //    sickList = sickList || $(this).prop('checked');
            //});
            //if (sickList) {
            //    alert('در صورت وجود هر یک از بیماری های گفته شده امکان خرید بیمه وجود ندارد');
            //    e.preventDefault();
            //}
        });
        //$('#Method').on('change', function () {
        //    var id = this.value;
        //    $('.insurance.details').removeClass('show');
        //    $('#div' + id).addClass('show');
        //});

        $('#SearchPerson').on('click', function () {
            var NationalCode_new = $('#NationalCode_new').val();
            var birthdate_new = $('#birthdate_new').val();
            $.post('/Sale/GetCivilRegistryOfficeData', { nc: NationalCode_new, bt: birthdate_new }, function (data) {
                $('#NationalCode').val(data.nationalCode);
                $('#FirstName').val(data.first_name);
                $('#LastName').val(data.last_name);
                $('#BirthDate').val(data.birthdate);
            });
        });
    });
    function validateNationalCode(nc) {
        var sumNaCode = 0;
        for (var i = 0; i < nc.length - 1; i++) {
            sumNaCode = sumNaCode + parseInt(nc[i]) * (10 - i);
        }
        console.log(sumNaCode);
        console.log(sumNaCode % 11);
        if (sumNaCode % 11 < 2) {
            if ((sumNaCode % 11).toString() == nc[9])
                return true;
        } else {
            if ((11 - (sumNaCode % 11)).toString() == nc[9])
                return true;
        }
        return false;
    }
    function getAge() {
        return parseInt('@perYear') - getYear($('#BirthDate').val());
    }

    function getYear(birth) {
        return getEngNumber(birth.toString().split('/')[0]);
    }
    function getEngNumber(num) {
        return num.split('١').join('1')
            .split('۱').join('1')
            .split('٢').join('2')
            .split('۲').join('2')
            .split('٣').join('3')
            .split('۳').join('3')
            .split('٤').join('4')
            .split('۴').join('4')
            .split('٥').join('5')
            .split('۵').join('5')
            .split('٦').join('6')
            .split('۶').join('6')
            .split('٧').join('7')
            .split('۷').join('7')
            .split('٨').join('8')
            .split('۸').join('8')
            .split('٩').join('9')
            .split('۹').join('9')
            .split('٠').join('0')
            .split('۰').join('0');
    }
    function digitGroup(num) {
        return num.toLocaleString();
    }
    document.addEventListener("DOMContentLoaded", function (event) {
        $('select:not(.sample)').select2({
            minimumInputLength: 0 // only start searching when the user has input 3 or more characters
        });
        var loaddata = false;
        $('#beforeCustomer').on('change', function () {
            if ($('#beforeCustomer').prop('checked')) {
                $('#forMySelf').prop('checked', false);
                $('#befDiv').show();
                if (loaddata == false) {
                    $.get('/JsonData/GetBeforeData?forProduct=corona', function (data) {
                        var jsonData = JSON.parse(data);
                        var strCombo = '<option value="">لطفا انتخاب کنید</option>';
                        if (jsonData.length==0)
                            strCombo = '<option value="">خرید قبلی ندارید</option>';
                        for (var i = 0; i < jsonData.length; i++) {
                            strCombo += '<option value="' + i.toString() + '">' + jsonData[i].NationalCode  + "-" + jsonData[i].FirstName + "-" + jsonData[i].LastName + '</option>';

                        }
                        $('#beforeSelect').html(strCombo);
                        $('#beforeSelect').on('change', function () {
                            var index = $('#beforeSelect').val();
                            if (index) {
                                $('#NationalCode').val(jsonData[index].NationalCode);
                                showLoadedData(jsonData[index])
                            }
                        });
                    });
                }
            } else {
                $('#befDiv').hide();
            }
        });

        $('#forMySelf').on('change', function () {
            if ($('#forMySelf').prop('checked')) {
                $.post('/Sale/MyselfData', { forProduct: 'corona' }, function (data) {
                    if (data) {
                        var jsonData = JSON.parse(data.data);
                        //var jsonData = new JSON.parse(data.toString().substring(1, data.length - 2));

                        //var jsonData = JSON.parse(data);
                        if (jsonData.length > 0) {
                            showLoadedData(jsonData[0])
                        }
                    }
                });
            }
        });
    });
    function showLoadedData(data) {
        $('#plan option').each(function () {
            if ($(this).attr('value').endsWith("*" + data.PlanExid + "*" + data.CoveredDays.toString())) {
                $('#plan').val($(this).val());
                $('#plan').trigger('change');
                return false;

            }
        });
        $('#plan').val(data.PlanExid);
        $('#NationalCode').val(data.NationalCode);
        $('#FirstName').val(data.FirstName);
        $('#LastName').val(data.LastName);
        if (data.IsMan) {
            $('#man').prop('checked', true);
            $('#woman').prop('checked', false);
        }
        else {
            $('#woman').prop('checked', true);
            $('#man').prop('checked', false);
        }
        $('#Mobile').val(data.Mobile);
        $('#Address').val(data.Address);
        $('#PostalCode').val(data.PostalCode);
        if (data.BirthDate) {
            $('#divBirthDate').html('')
            $('#divBirthDate').html('<label for="BirthDate">تاریخ تولد</label><input name="BirthDate" id="BirthDate" class="form-control persian-date" value="' + data.BirthDate.split('-').join('/').substring(0, data.BirthDate.indexOf('T')) + '" oninput="CheckValidity(this);" oninvalid="CheckValidity(this);" /><span validation-for="BirthDate" class="text-danger"></span>');
            //$('#BirthDate').val();
            $('#BirthDate').persianDatepicker({
                //altField: "#alt" + (index + 1).toString(),
                altFormat: 'LLLL',
                initialValue: true,
                //initialValueType: 'persian',
                observer: true,
                format: 'YYYY/MM/DD',
                //timePicker: {
                //    enabled: true
                //}
            });
        }
    }

</script>

