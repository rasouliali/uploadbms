@using Microsoft.Data.SqlClient;
@{

    /*var db = new DataAccess();
    var usersDt = db.ProccessSelectQuery("sp_GetKhavarJobs", new SqlParameter[] {
                new SqlParameter("@username",User.Identity.Name),
                }, System.Data.CommandType.StoredProcedure);
    var dtList = usersDt.Select().Select(r => new { code = r["id"], title = r["Name"] }).ToList();
    var dtSelect = new SelectList(dtList, "code", "title");
*/
    var per = new System.Globalization.PersianCalendar();
    var perYear = per.GetYear(DateTime.Now);
}
<script type="text/javascript">
    function getParameterByNameFromQueryString(name, url) {
        if (url)
            ;
        else
            url = window.location.href;
        name = name.replace(/[\[\]]/g, '\\$&');
        var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, ' '));
    }
    var lifeType = getParameterByNameFromQueryString('lifeType'); // "lorem"

</script>
<form action="/Info/ShoppingData" method="post">
    @Html.Hidden("WorkFlowId", 1032)
    @Html.Hidden("ShoppingPageId", 1015)
    @Html.Hidden("payer_insured_question", 0)
    @Html.Hidden("insured_question", 0)
    @Html.Hidden("Age", "")
    @Html.Hidden("IBAN", "")
    @Html.Hidden("IDFirstPage", "")
    @Html.Hidden("BirthCertificatePage", "")
    <div dir="rtl">
        <fieldset id="packageFieldset" class="allpart row">
            <div class="col-12"><h5>طرح انتخابی</h5></div>
            <div class="col-12 mb-4">
                <div class="progress">
                    <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="14" aria-valuemin="0" aria-valuemax="100" style="width: 14%"></div>
                </div>
            </div>
            <div class="form-group col-md-4">
                <label for="package_id">بیمه انتخاب شده</label>
                <select name="package_id" id="package_id" class="form-control sample" required >
                    <option value="">لطفا انتخاب کنید</option>
                </select>
                <span validation-for="package_id" class="text-danger"></span>
            </div>
            <div class="form-group col-md-4">
                <label for="PayCountInYear">نحوه پرداخت بیمه</label>
                <select name="PayCountInYear" id="PayCountInYear" class="form-control sample" required >
                    <option value="">ابتدا بیمه را انتخاب کنید</option>
                </select>
                <span validation-for="PayCountInYear" class="text-danger"></span>
            </div>

            <div class="form-group col-md-4">
                
            </div>


            <div class="row" id="PayCountInYear2">
            
            </div>

            

            <div class="col-12 mb-3" id="ins-desc">

            </div>
        </fieldset>
        <fieldset id="searchFieldset" class="allpart row">
            <div class="col-12"><h5>جست و جوی بیمه کننده</h5></div>
            <div class="col-12 mb-4">
                <div class="progress">
                    <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="28" aria-valuemin="0" aria-valuemax="100" style="width: 28%"></div>
                </div>
            </div>
            <div id="befDiv" class="form-group col-md-4">
                <div class="form-group">
                    <label for="searchNationalCode">کد ملی</label>
                    <input id="searchNationalCode" type="tel" required maxlength="10" class="form-control" />
                    <span validation-for="searchNationalCode" class="text-danger"></span>
                    <label for="" class="col-sm-12">&nbsp;</label>
                    <button class="btn btn-warning" id="SearchPerson" type="button">جست و جو</button>
                </div>

            </div>
        </fieldset>
        @*<div class="form-group">
            <a href="" target="_blank" class="btn btn-primary" id="plan-Link-Url" >دانلود مستند</a>
            <label >دانلود مستند تعریف طرح انتخابی</label>
        </div>*@
    <fieldset id="FirstFieldset" class="allpart row">
        <div class="col-12"><h5>اطلاعات بیمه کننده</h5></div>
            <div class="col-12 mb-4">
                <div class="progress">
                    <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="42" aria-valuemin="0" aria-valuemax="100" style="width: 42%"></div>
                </div>
            </div>
        <div class="form-group col-md-4">
            <label for="payer_national_code">کد ملی</label>
            <input name="payer_national_code" id="payer_national_code" type="tel" readonly required maxlength="10" class="form-control" />
            <span validation-for="payer_national_code" class="text-danger"></span>
        </div>
        <div class="form-group col-md-4">
            <label for="payer_name">نام</label>
            <input name="payer_name" id="payer_name" class="form-control" type="text" required />
            <span validation-for="payer_name" class="text-danger"></span>
        </div>
        <div class="form-group col-md-4">
            <label for="payer_lastname">نام خانوادگی</label>
            <input name="payer_lastname" id="payer_lastname" class="form-control" type="text" required />
            <span validation-for="payer_lastname" class="text-danger"></span>
        </div>
        <div class="form-group col-md-4">
            <label for="payer_IsMan">جنسیت</label>
            <select class="form-control sample" id="payer_IsMan" required name="payer_IsMan">
                <option value="">لطفا انتخاب کنید</option>
                <option value="1">مرد</option>
                <option value="0">زن</option>
            </select>
            <span validation-for="payer_IsMan" class="text-danger"></span>
        </div>
        <div class="form-group col-md-4">
            <label for="payer_Military_Service">وضعیت خدمت</label>
            <select class="form-control sample" id="payer_Military_Service" name="payer_Military_Service">
                <option value="">لطفا انتخاب کنید</option>
                <option value="1">دارای کارت پایان خدمت</option>
                <option value="2">انجام نشده</option>
                <option value="3">معافیت</option>
            </select>
            <span validation-for="payer_Military_Service" class="text-danger"></span>
        </div>
        <div class="form-group col-md-4">
            <label for="payer_Military_Service_Reason">علت معافیت</label>
            <input name="payer_Military_Service_Reason" id="payer_Military_Service_Reason" class="form-control" type="text" />
            <span validation-for="payer_Military_Service_Reason" class="text-danger"></span>
        </div>
        <div class="form-group col-md-4">
            <label for="payer_FatherIsAlive">پدر در قید حیات است؟</label>
            <select class="form-control sample" id="payer_FatherIsAlive" required name="payer_FatherIsAlive">
                <option value="">لطفا انتخاب کنید</option>
                <option value="1">بلی</option>
                <option value="0">خیر</option>
            </select>
            <span validation-for="payer_FatherIsAlive" class="text-danger"></span>
        </div>
        <div class="form-group col-md-4">
            <label for="payer_FatherReasonOfDead">علت فوت پدر</label>
            <input name="payer_FatherReasonOfDead" id="payer_FatherReasonOfDead" class="form-control" type="text" />
            <span validation-for="payer_FatherReasonOfDead" class="text-danger"></span>
        </div>
        <div class="form-group col-md-4">
            <label for="payer_FatherAge">سن پدر</label>
            <input name="payer_FatherAge" id="payer_FatherAge" required class="form-control" type="tel" />
            <span validation-for="payer_FatherAge" class="text-danger"></span>
        </div>
        <div class="form-group col-md-4">
            <label for="payer_MotherIsAlive">مادر در قید حیات است؟</label>
            <select class="form-control sample" id="payer_MotherIsAlive" required name="payer_MotherIsAlive">
                <option value="">لطفا انتخاب کنید</option>
                <option value="1">بلی</option>
                <option value="0">خیر</option>
            </select>
            <span validation-for="payer_MotherIsAlive" class="text-danger"></span>
        </div>
        <div class="form-group col-md-4">
            <label for="payer_MotherReasonOfDead">علت فوت مادر</label>
            <input name="payer_MotherReasonOfDead" id="payer_MotherReasonOfDead" class="form-control" type="text" />
            <span validation-for="payer_MotherReasonOfDead" class="text-danger"></span>
        </div>
        <div class="form-group col-md-4">
            <label for="payer_MotherAge">سن مادر</label>
            <input name="payer_MotherAge" id="payer_MotherAge" required class="form-control" type="tel" />
            <span validation-for="payer_MotherAge" class="text-danger"></span>
        </div>
        <div class="form-group col-md-4">
            <label for="payer_birth_year">تاریخ تولد</label>
            <input name="payer_birth_year" id="payer_birth_year" required class="form-control"  data-jdp data-jdp-max-date="today" />
            <span validation-for="payer_birth_year" class="text-danger"></span>
        </div>

        <div class="form-group col-md-4">
            <label for="payer_job_id">شغل</label>
            <input type="text" class="form-control" id="payer_job_id" required name="payer_job_id" @*asp-items="@dtSelect"*@ />
            <span validation-for="payer_job_id" class="text-danger"></span>
        </div>
        <div class="form-group col-md-4">
            <label for="payer_mobile">شماره موبایل</label>
            <input name="payer_mobile" id="payer_mobile" class="form-control" type="tel" required max="9999999999" min="9000000000" />
            <span validation-for="payer_mobile" class="text-danger"></span>
        </div>
        <div class="form-group col-md-4">
            <label for="payer_phone">شماره تلفن</label>
            <input name="payer_phone" id="payer_phone" class="form-control" type="tel" required />
            <span validation-for="payer_phone" class="text-danger"></span>
        </div>
        <div class="form-group col-md-4">
            <label for="ProvinceId">استان</label>
            <select name="payer_province_id" id="ProvinceId" required class="form-control Province"><option value="">لطفا انتخاب کنید</option></select>
            <span validation-for="ProvinceId" class="text-danger"></span>
        </div>
        <div class="form-group col-md-4">
            <label for="holder_city_id">شهر</label>
            <select name="payer_city_id" id="holder_city_id" required class="form-control"><option value="">ابتدا استان را انتخاب نمایید</option></select>
            <span validation-for="holder_city_id" class="text-danger"></span>
        </div>
        <div class="form-group col-md-4">
            <label for="payer_address">آدرس</label>
            <input name="payer_address" id="payer_address" class="form-control" type="text" required />
            <span validation-for="payer_address" class="text-danger"></span>
        </div>
        <div class="form-group col-md-4">
            <label for="payer_postal_code">کد پستی</label>
            <input name="payer_postal_code" id="payer_postal_code" class="form-control" type="tel" required />
            <span validation-for="payer_postal_code" class="text-danger"></span>
        </div>
        <div class="form-group col-md-4">
            <label for="payer_weight">وزن</label>
            <input name="payer_weight" id="payer_weight" class="form-control" type="tel" required />
            <span validation-for="payer_weight" class="text-danger"></span>
        </div>
        <div class="form-group col-md-4">
            <label for="payer_height">قد</label>
            <input name="payer_height" id="payer_height" class="form-control" type="tel" required />
            <span validation-for="payer_height" class="text-danger"></span>
        </div>
        <div class="form-group col-12">
            <input type="hidden" name="payer_Sport" value="0"><input id="payer_Sport" type="checkbox" onclick="this.previousSibling.value=1-this.previousSibling.value">
            <label for="payer_Sport">
                ورزش حرفه ای انجام میدهید؟
            </label>
        </div>
        <div class="form-group col-12">
            <input type="hidden" name="payer_Cigarette" value="0"><input id="payer_Cigarette" type="checkbox" onclick="this.previousSibling.value=1-this.previousSibling.value">
            <label for="payer_Cigarette">
                آیا سیگاری هستید؟
            </label>
        </div>
        <div class="form-group col-12">
            <input type="hidden" name="payer_Motor" value="0"><input id="payer_Motor" type="checkbox" onclick="this.previousSibling.value=1-this.previousSibling.value">
            <label for="payer_Motor">
                آیا از موتور سیکلت به طور مداوم استفاده می نمایید؟
            </label>
        </div>
        <div class="form-group col-12">
            <input type="hidden" name="sick" value="0"><input id="sick" type="checkbox" onclick="this.previousSibling.value=1-this.previousSibling.value">
            <label for="sick">آیا بیماری خاصی دارید؟</label>
        </div>
        <div class="form-group" id="sickesList" style="display:none">
            <fieldset>
                <legend>لیست بیماری ها:</legend>
                <div class="form-group col-12">
                    <input type="checkbox" name="payer_has_disability" id="sickesList2" value="1" />
                    <label for="sickesList2">
                        آیا دچار نقص عضو یا از کار افتادگی میباشید؟
                    </label>
                </div>
                <div class="form-group col-12">
                    <input type="checkbox" name="payer_has_operation" id="sickesList3" value="1" />
                    <label for="sickesList3">
                        آیا تا به حال عمل جراحی انجام دادهاید؟
                    </label>
                </div>
                <div class="form-group col-12">
                    <input type="checkbox" name="payer_has_breath" id="sickesList4" value="1" />
                    <label for="sickesList4">
                        آیا دارای سابقه بیماریهای قلبی، دستگاه گردش خون (مانند سکته قلبی یا مغزی)، اعصاب و روان (مانند صرع یا افسردگی)، دستگاه تنفس، دستگاه گوارش،
                        دستگاه ادراری – تناسلی، مفاصل و استخوانها، غدد داخلی (مانند دیابت)، انواع سرطان و بیماریهای خود ایمنی و یا هر نوع بیماری مزمن دیگر میباشید؟
                    </label>
                </div>
                <div class="form-group col-12">
                    <input type="checkbox" name="payer_has_family_sickness" id="sickesList5" value="1" />
                    <label for="sickesList5">
                        آیا در بین افراد درجه یک خانواده شما فردی به بیماری خاصی مبتلا است؟
                    </label>
                </div>
                <div class="form-group col-12">
                    <input type="checkbox" name="payer_has_care_doctor" id="sickesList6" value="1" />
                    <label for="sickesList6">
                        آیا در حال حاضر تحت نظر یا درمان پزشک می باشید ؟
                    </label>
                </div>
            </fieldset>
        </div>

        <div class="form-group col-12">
            <input type="hidden" name="payer_taking_medicine" value="0"><input id="payer_taking_medicine" type="checkbox" onclick="this.previousSibling.value=1-this.previousSibling.value">
            <label for="payer_taking_medicine">
                آیا دارویی مصرف میکنید؟
            </label>
        </div>
        <div class="form-group col-12">
            <label for="payer_taking_medicine_names">نام داروها</label>
            <input name="payer_taking_medicine_names" id="payer_taking_medicine_names" class="form-control" type="text" />
            <span validation-for="payer_taking_medicine_names" class="text-danger"></span>
        </div>
    </fieldset>


            
        <div class="form-group allpart row" id="IsOnPerson">
            <div class="col-12 mb-4">
                <div class="progress">
                    <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="56" aria-valuemin="0" aria-valuemax="100" style="width: 56%"></div>
                </div>
            </div>
            <div class="form-group col-12">
            <input type="checkbox" id="Payer_Insurancer_Is_One" />
            <label for="Payer_Insurancer_Is_One">آیا بیمه کننده و بیمه شونده یک فرد است؟</label>
            </div>
        </div>
        <fieldset id="searchFieldset2" class="allpart row">
            <div class="col-12"><h5>جست و جوی بیمه شونده</h5></div>
            <div class="col-12 mb-4">
                <div class="progress">
                    <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100" style="width: 70%"></div>
                </div>
            </div>
            <div class="form-group col-md-4">
                <div class="form-group">
                    <label for="Insured_searchNationalCode">کد ملی</label>
                    <input id="Insured_searchNationalCode" type="tel" required maxlength="10" class="form-control" />
                    <span validation-for="Insured_searchNationalCode" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label for="" class="col-sm-12">&nbsp;</label>
                    <button class="btn btn-default" id="Insured_SearchPerson" type="button">جست و جو</button>
                </div>
            </div>
        </fieldset>
        <fieldset id="SecondFieldset" class="allpart row">

            <div class="col-12"><h5>اطلاعات بیمه شونده</h5></div>
            <div class="col-12 mb-4">
                <div class="progress">
                    <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="84" aria-valuemin="0" aria-valuemax="100" style="width: 84%"></div>
                </div>
            </div>
            <div class="form-group col-md-4">
                <label for="Insured_national_code">کد ملی</label>
                <input name="Insured_national_code" id="Insured_national_code" type="tel" readonly required maxlength="10" class="form-control" />
                <span validation-for="Insured_national_code" class="text-danger"></span>
            </div>
            <div class="form-group col-md-4">
                <label for="Insured_name">نام</label>
                <input name="Insured_name" id="Insured_name" class="form-control" type="text" required />
                <span validation-for="Insured_name" class="text-danger"></span>
            </div>
            <div class="form-group col-md-4">
                <label for="Insured_lastname">نام خانوادگی</label>
                <input name="Insured_lastname" id="Insured_lastname" class="form-control" type="text" required />
                <span validation-for="Insured_lastname" class="text-danger"></span>
            </div>
            <div class="form-group col-md-4">
                <label for="Insured_IsMan">جنسیت</label>
                <select class="form-control sample" id="Insured_IsMan" required name="Insured_IsMan">
                    <option value="">لطفا انتخاب کنید</option>
                    <option value="1">مرد</option>
                    <option value="0">زن</option>
                </select>
                <span validation-for="Insured_IsMan" class="text-danger"></span>
            </div>
            <div class="form-group col-md-4">
                <label for="Insured_Military_Service">وضعیت خدمت</label>
                <select class="form-control sample" id="Insured_Military_Service" name="Insured_Military_Service">
                    <option value="">لطفا انتخاب کنید</option>
                    <option value="1">دارای کارت پایان خدمت</option>
                    <option value="2">انجام نشده</option>
                    <option value="3">معافیت</option>
                </select>
                <span validation-for="Insured_Military_Service" class="text-danger"></span>
            </div>
            <div class="form-group col-md-4">
                <label for="Insured_Military_Service_Reason">علت معافیت</label>
                <input name="Insured_Military_Service_Reason" id="Insured_Military_Service_Reason" class="form-control" type="text" />
                <span validation-for="Insured_Military_Service_Reason" class="text-danger"></span>
            </div>
            <div class="form-group col-md-4">
                <label for="Insured_FatherIsAlive">پدر در قید حیات است؟</label>
                <select class="form-control sample" id="Insured_FatherIsAlive" required name="Insured_FatherIsAlive">
                    <option value="">لطفا انتخاب کنید</option>
                    <option value="1">بلی</option>
                    <option value="0">خیر</option>
                </select>
                <span validation-for="Insured_FatherIsAlive" class="text-danger"></span>
            </div>
            <div class="form-group col-md-4">
                <label for="Insured_FatherReasonOfDead">علت فوت</label>
                <input name="Insured_FatherReasonOfDead" id="Insured_FatherReasonOfDead" class="form-control" type="text" />
                <span validation-for="Insured_FatherReasonOfDead" class="text-danger"></span>
            </div>
            <div class="form-group col-md-4">
                <label for="Insured_FatherAge">سن پدر</label>
                <input name="Insured_FatherAge" id="Insured_FatherAge" required class="form-control" type="tel" />
                <span validation-for="Insured_FatherAge" class="text-danger"></span>
            </div>
            <div class="form-group col-md-4">
                <label for="Insured_MotherIsAlive">مادر در قید حیات است؟</label>
                <select class="form-control sample" id="Insured_MotherIsAlive" required name="Insured_MotherIsAlive">
                    <option value="">لطفا انتخاب کنید</option>
                    <option value="1">بلی</option>
                    <option value="0">خیر</option>
                </select>
                <span validation-for="Insured_MotherIsAlive" class="text-danger"></span>
            </div>
            <div class="form-group col-md-4">
                <label for="Insured_MotherReasonOfDead">علت فوت</label>
                <input name="Insured_MotherReasonOfDead" id="Insured_MotherReasonOfDead" class="form-control" type="text" />
                <span validation-for="Insured_MotherReasonOfDead" class="text-danger"></span>
            </div>
            <div class="form-group col-md-4">
                <label for="Insured_MotherAge">سن مادر</label>
                <input name="Insured_MotherAge" id="Insured_MotherAge" required class="form-control" type="tel" />
                <span validation-for="Insured_MotherAge" class="text-danger"></span>
            </div>
            <div class="form-group col-md-4">
                <label for="Insured_birth_year">تاریخ تولد</label>
                <input name="Insured_birth_year" id="Insured_birth_year" class="form-control" data-jdp data-jdp-max-date="today" />
                <span validation-for="Insured_birth_year" class="text-danger"></span>
            </div>

            <div class="form-group col-md-4">
                <label for="Insured_job_id">شغل</label>
                <input type="text" class="form-control" id="Insured_job_id" required name="Insured_job_id" @*asp-items="@dtSelect"*@ />
                <span validation-for="Insured_job_id" class="text-danger"></span>
                <!--<select class="form-control" id="Insured_job_id" required name="Insured_job_id"--> @*asp-items="@dtSelect"*@ <!--<option value="">لطفا انتخاب کنید</option></select>-->
            </div>
            <div class="form-group col-md-4">
                <label for="Insured_weight">وزن</label>
                <input name="Insured_weight" id="Insured_weight" class="form-control" type="tel" required />
                <span validation-for="Insured_weight" class="text-danger"></span>
            </div>
            <div class="form-group col-md-4">
                <label for="Insured_height">قد</label>
                <input name="Insured_height" id="Insured_height" class="form-control" type="tel" required />
                <span validation-for="Insured_height" class="text-danger"></span>
            </div>
            <div class="form-group col-md-12">
                <input type="hidden" name="Insured_Sport" value="0"><input id="Insured_Sport" type="checkbox" onclick="this.previousSibling.value=1-this.previousSibling.value">
                <label for="Insured_Sport">
                    ورزش حرفه ای انجام میدهید؟
                </label>
            </div>
            <div class="form-group col-md-12">
                <input type="hidden" name="Insured_Cigarette" value="0"><input id="Insured_Cigarette" type="checkbox" onclick="this.previousSibling.value=1-this.previousSibling.value">
                <label for="Insured_Cigarette">
                    آیا سیگاری هستید؟
                </label>
            </div>
            <div class="form-group col-md-12">
                <input type="hidden" name="Insured_Motor" value="0"><input id="Insured_Motor" type="checkbox" onclick="this.previousSibling.value=1-this.previousSibling.value">
                <label for="Insured_Motor">
                    آیا از موتور سیکلت به طور مداوم استفاده می نمایید؟
                </label>
            </div>
            <div class="form-group col-md-12">
                <input type="hidden" name="sick2" value="0"><input id="sick2" type="checkbox" onclick="this.previousSibling.value=1-this.previousSibling.value">
                <label for="sick2">آیا بیماری خاصی دارید؟</label>
            </div>
            <div class="form-group" id="sickesList_2" style="display:none">
                <fieldset>
                    <legend>لیست بیماری ها:</legend>
                    <div class="form-group col-md-12">
                        <input type="checkbox" name="Insured_has_disability" id="sickesList_2_2" value="1" />
                        <label for="sickesList_2_2">
                            آیا دچار نقص عضو یا از کار افتادگی میباشید؟
                        </label>
                    </div>
                    <div class="form-group col-md-12">
                        <input type="checkbox" name="Insured_has_operation" id="sickesList_2_3" value="1" />
                        <label for="sickesList_2_3">
                            آیا تا به حال عمل جراحی انجام دادهاید؟
                        </label>
                    </div>
                    <div class="form-group col-md-12">
                        <input type="checkbox" name="Insured_has_breath" id="sickesList_2_4" value="1" />
                        <label for="sickesList_2_4">
                            آیا دارای سابقه بیماریهای قلبی، دستگاه گردش خون (مانند سکته قلبی یا مغزی)، اعصاب و روان (مانند صرع یا افسردگی)، دستگاه تنفس، دستگاه گوارش،
                            دستگاه ادراری – تناسلی، مفاصل و استخوانها، غدد داخلی (مانند دیابت)، انواع سرطان و بیماریهای خود ایمنی و یا هر نوع بیماری مزمن دیگر میباشید؟
                        </label>
                    </div>
                    <div class="form-group col-md-12">
                        <input type="checkbox" name="Insured_has_family_sickness" id="sickesList_2_5" value="1" />
                        <label for="sickesList_2_5">
                            آیا در بین افراد درجه یک خانواده شما فردی به بیماری خاصی مبتلا است؟
                        </label>
                    </div>
                    <div class="form-group col-md-12">
                        <input type="checkbox" name="Insured_has_care_doctor" id="sickesList_2_6" value="1" />
                        <label for="sickesList_2_6">
                            آیا در حال حاضر تحت نظر یا درمان پزشک می باشید ؟
                        </label>
                    </div>
                </fieldset>
            </div>
            <div class="form-group col-md-12">
                <input type="hidden" name="Insured_taking_medicine" value="0"><input id="Insured_taking_medicine" type="checkbox" onclick="this.previousSibling.value=1-this.previousSibling.value">
                <label for="Insured_taking_medicine">
                    آیا دارویی مصرف میکنید؟
                </label>
            </div>
            <div class="form-group col-md-12">
                <label for="Insured_taking_medicine_names">نام داروها</label>
                <input name="Insured_taking_medicine_names" id="Insured_taking_medicine_names" class="form-control" type="text" />
                <span validation-for="Insured_taking_medicine_names" class="text-danger"></span>
            </div>
            <div class="form-group col-md-12">
                <label for="relation">نسبت بیمه کننده به شونده</label>
                <select class="form-control sample" id="relation" required name="payer_Insured_relation">
                    <option value="">لطفا انتخاب کنید</option>
                    <option value="1">پدر</option>
                    <option value="2">مادر</option>
                    <option value="3">برادر</option>
                    <option value="4">خواهر</option>
                    <option value="5">فرزند</option>
                    <option value="6">سایر</option>
                </select>
            </div>
            <span validation-for="relation" class="text-danger"></span>
        </fieldset>


        <fieldset id="ThirdFieldset" class="allpart row">
            <div class="col-12"><h5>شرکت بیمه</h5></div>
            <div class="col-12 mb-4">
                <div class="progress">
                    <div class="progress-bar progress-bar-striped progress-bar-animated bg-success" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%"></div>
                </div>
            </div>
            <div class="form-group col-md-4">
                <label for="Insured_company">نام شرکت بیمه</label>
                <select class="form-control sample" id="Insured_company" required name="Insured_company" >
                    <option value="">لطفا انتخاب کنید</option>
                    <option value="mellat">بیمه ملت</option>
                    <option value="novin">بیمه نوین</option>
                    <option value="saman">بیمه سامان</option>
                </select>
            </div>
            <span validation-for="Insured_company" class="text-danger"></span>
        </fieldset>

        <div class="col-12">
        <button class="btn btn-success" type="button" id="btn-nex">صفحه بعد</button>
        <button class="btn btn-warning" type="button" id="btn-pay">خرید</button>
        <button class="btn btn-primary float-right" type="button" id="btn-bef">صفحه قبل</button>
        </div>

    </div>
</form>


<script type="text/javascript">
    var pageInd = 0;
    var glob_CityId = 0;
    function CheckValidity(elem,isReport,errorTxt) {
        elem.setCustomValidity('');
        if (isReport && errorTxt) {
            elem.setCustomValidity(errorTxt);
            $('[validation-for=' + $(elem).attr('id') + ']').html(errorTxt)
            elem.reportValidity();
            return true;
        }
        if (elem.validity.valueMissing) {
            if ($(elem).attr('type') && $(elem).attr('type') == "number") {
                elem.setCustomValidity('این فیلد اجباری است، اعداد بصورت زبان انگلیسی باید وارد شوند.');
                $('[validation-for=' + $(elem).attr('id') + ']').html('این فیلد اجباری است، اعداد بصورت زبان انگلیسی باید وارد شوند.')
                if (isReport)
                    elem.reportValidity();
            }
            else {
                elem.setCustomValidity('این فیلد اجباری است، لطفا تکمیل نمایید.');
                $('[validation-for=' + $(elem).attr('id') + ']').html('این فیلد اجباری است، لطفا تکمیل نمایید.')
                if (isReport)
                    elem.reportValidity();
            }

            return true;
        }
        //if ($(elem).attr('id') == "NationalCode") {
        //    //if (validateNationalCode($(elem).val()))
        //    elem.setCustomValidity($(elem).val());//'کد ملی صحیح نیست');
        //}
        if ($(elem).attr('id') == "Insured_mobile" || $(elem).attr('id') == "payer_mobile") {
            if (elem.validity.rangeOverflow || elem.validity.rangeUnderflow) {
                $('[validation-for=' + $(elem).attr('id') + ']').html('لطفا شماره همراه صحیح وارد نمایید.')
                elem.setCustomValidity('لطفا شماره همراه صحیح وارد نمایید');
                if (isReport)
                    elem.reportValidity();
            }
        }
        return true;
    }
    function validationPaging() {
        $('span.text-danger').html('');
        var isValid = true;
        switch (pageInd) {
            case 0: {
                $('#packageFieldset input').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this,true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });
                $('#packageFieldset select').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this, true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });
                //packageFieldset
                break;
            }
            case 1: {
                $('#searchFieldset input').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this, true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });
                $('#searchFieldset select').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this, true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });
                if (validateNationalCode($('#searchFieldset input').val()) == false) {
                    
                    CheckValidity($('#searchFieldset input')[0], true, 'کد ملی صحیح نیست');
                    isValid = false;
                    return isValid;
                }
                //searchFieldset
                break;
            }
            case 2: {
                $('#FirstFieldset input').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this, true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });
                $('#FirstFieldset select').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this, true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });
                //=====================================================================================
                $('#FirstFieldset .persian-date').each(function (index, elem) {
                    var isValidDate = $(this).ShamsiDatePickerValidate();
                    if (isValidDate == true) {

                    } else {
                        
                        isValid = false;
                        CheckValidity(this, true, isValidDate);
                        return isValid;
                    }
                });
                if ($('#payer_job_id').val() && ($('#payer_job_id').val().trim() == 'آزاد' || $('#payer_job_id').val().trim() == 'ازاد')) {
                    
                    isValid = false;
                    CheckValidity($('#payer_job_id')[0], true, 'لطفا عنوان شغل آزاد خود را مطرح نمایید');
                    return isValid;
                }
                if (validateNationalCode($('#payer_national_code').val()) == false) {
                    
                    CheckValidity($('#payer_national_code')[0], true, 'کد ملی صحیح نیست');
                    isValid = false;
                    return isValid;
                }
                var sickList = false;
                var sickElem;
                $('#FirstFieldset [name=sickesList]').each(function () {
                    sickList = sickList || $(this).prop('checked');
                    if ($(this).prop('checked'))
                        sickElem = this;
                });
                if (sickList) {
                    CheckValidity(sickElem, true, 'در صورت وجود هر یک از بیماری های گفته شده امکان خرید بیمه وجود ندارد');
                    isValid = false;
                    return isValid;
                }
                //FirstFieldset
                break;
            }
            case 3: {
                $('#IsOnPerson input').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this, true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });
                $('#IsOnPerson select').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this, true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });
                //IsOnPerson
                break;
            }
            case 4: {
                $('#searchFieldset2 input').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this, true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });
                $('#searchFieldset2 select').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this, true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });

                if (validateNationalCode($('#searchFieldset2 input').val()) == false) {
                    CheckValidity($('#searchFieldset2 input')[0], true, 'کد ملی صحیح نیست');
                    isValid = false;
                    return isValid;
                }
                //searchFieldset2
                break;
            }
            case 5: {
                $('#SecondFieldset input').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this, true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });
                $('#SecondFieldset select').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this, true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });

                //=====================================================================================
                $('#SecondFieldset .persian-date').each(function (index, elem) {
                    var isValidDate = $(this).ShamsiDatePickerValidate();
                    if (isValidDate == true) {

                    } else {
                        isValid = false;
                        CheckValidity(this, true, isValidDate);
                        return isValid;
                    }
                });
                if ($('#Insured_job_id').val() && ($('#Insured_job_id').val().trim() == 'آزاد' || $('#Insured_job_id').val().trim() == 'ازاد')) {
                    
                    CheckValidity($('#Insured_job_id')[0], true, 'لطفا عنوان شغل آزاد خود را مطرح نمایید');
                    isValid = false;
                    return isValid;
                }

                if (validateNationalCode($('#Insured_national_code').val()) == false) {
                    
                    CheckValidity($('#Insured_national_code')[0], true, 'کد ملی صحیح نیست');
                    isValid = false;
                    return isValid;
                }
                if (getAge() > 65) {
                    CheckValidity($('#SecondFieldset .persian-date')[0], true, 'بیمه فقط برای افراد کمتر از 65 سال صادر می شود');
                    isValid = false;
                    return isValid;
                }
                var sickList = false;
                var sickElem;
                $('#SecondFieldset [name=sickesList]').each(function () {
                    sickList = sickList || $(this).prop('checked');
                    if ($(this).prop('checked'))
                        sickElem = this;
                });
                if (sickList) {
                    CheckValidity(sickElem, true, 'در صورت وجود هر یک از بیماری های گفته شده امکان خرید بیمه وجود ندارد');
                    isValid = false;
                    return isValid;
                }
                //SecondFieldset
                break;
            }
            case 6: {
                $('#ThirdFieldset input').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this, true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });
                $('#ThirdFieldset select').each(function (index, elem) {
                    var val = $(this).val();
                    if (val)
                        ;
                    else {
                        if ($(this).attr("required")) {
                            CheckValidity(this, true);
                            isValid = false;
                            return isValid;
                        }
                    }

                });
                //ThirdFieldset
                break;
            }
        }
        return isValid;
    }
    function paging() {
                /*
packageFieldset
searchFieldset
FirstFieldset
IsOnPerson
searchFieldset
searchFieldset2
SecondFieldset
ThirdFieldset
btn-bef
btn-nex
btn-pay
     */
        switch (pageInd) {
            case 0: {
                $('.allpart').hide();
                $('#btn-bef').hide();
                $('#btn-pay').hide();
                $('#btn-nex').show();
                $('#packageFieldset').show();
                break;
            }
            case 1: {
                $('.allpart').hide();
                $('#btn-bef').show();
                $('#btn-pay').hide();
                $('#btn-nex').show();
                $('#searchFieldset').show();
                break;
            }
            case 2: {
                $('#btn-bef').show();
                $('#btn-pay').hide();
                $('#btn-nex').show();
                $('.allpart').hide();
                $('#FirstFieldset').show();
                break;
            }
            case 3: {
                $('#btn-bef').show();
                $('#btn-pay').hide();
                $('#btn-nex').show();
                $('.allpart').hide();
                $('#IsOnPerson').show();
                break;
            }
            case 4: {
                $('#btn-bef').show();
                $('#btn-pay').hide();
                $('#btn-nex').show();
                $('.allpart').hide();
                $('#searchFieldset2').show();
                break;
            }
            case 5: {
                $('#btn-bef').show();
                $('#btn-pay').hide();
                $('#btn-nex').show();
                $('.allpart').hide();
                $('#SecondFieldset').show();
                break;
            }
            case 6: {
                $('#btn-bef').show();
                $('#btn-pay').show();
                $('#btn-nex').hide();
                $('.allpart').hide();
                $('#ThirdFieldset').show();
                break;
            }
        }
    }
    function Payer_Insurancer_Is_One_So_equal_fields() {
        $('#Insured_national_code').val($('#payer_national_code').val());
        $('#Insured_name').val($('#payer_name').val());
        $('#Insured_IsMan').val($('#payer_IsMan').val());
        $('#Insured_Military_Service').val($('#payer_Military_Service').val());
        $('#Insured_Military_Service_Reason').val($('#payer_Military_Service_Reason').val());
        $('#Insured_FatherIsAlive').val($('#payer_FatherIsAlive').val());
        $('#Insured_FatherReasonOfDead').val($('#payer_FatherReasonOfDead').val());
        $('#Insured_FatherAge').val($('#payer_FatherAge').val());
        $('#Insured_MotherIsAlive').val($('#payer_MotherIsAlive').val());
        $('#Insured_MotherReasonOfDead').val($('#payer_MotherReasonOfDead').val());
        $('#Insured_MotherAge').val($('#payer_MotherAge').val());
        $('#Insured_birth_year').val($('#payer_birth_year').val());
        $('#Insured_job_id').val($('#payer_job_id').val());
        $('#Insured_weight').val($('#payer_weight').val());
        $('#Insured_height').val($('#payer_height').val());
        $('[name=Insured_Sport]').val($('[name=Insured_Sport]').val());
        $('[name=Insured_Cigarette]').val($('[name=payer_Cigarette]').val());
        $('[name=Insured_Motor]').val($('[name=payer_Motor]').val());
        $('[name=Insured_lastname]').val($('[name=payer_lastname]').val());
        $('[name=Insured_taking_medicine_names]').val($('[name=payer_taking_medicine_names]').val());
        $('[name=Insured_taking_medicine]').val($('[name=payer_taking_medicine]').val());
    }
    function validateNationalCode(nc) {
        var sumNaCode = 0;
        for (var i = 0; i < nc.length - 1; i++) {
            sumNaCode = sumNaCode + parseInt(nc[i]) * (10 - i);
        }
        console.log(sumNaCode);
        console.log(sumNaCode % 11);
        if (sumNaCode % 11 < 2) {
            if ((sumNaCode % 11).toString() == nc[9])
                return true;
        } else {
            if ((11 - (sumNaCode % 11)).toString() == nc[9])
                return true;
        }
        return false;
    }
    function getAge() {
        return parseInt('@perYear') - getYear($('#Insured_birth_year').val());
    }

    function getYear(birth) {
        return getEngNumber(birth.toString().split('/')[0]);
    }
    function getEngNumber(num) {
        return num.split('١').join('1')
            .split('۱').join('1')
            .split('٢').join('2')
            .split('۲').join('2')
            .split('٣').join('3')
            .split('۳').join('3')
            .split('٤').join('4')
            .split('۴').join('4')
            .split('٥').join('5')
            .split('۵').join('5')
            .split('٦').join('6')
            .split('۶').join('6')
            .split('٧').join('7')
            .split('۷').join('7')
            .split('٨').join('8')
            .split('۸').join('8')
            .split('٩').join('9')
            .split('۹').join('9')
            .split('٠').join('0')
            .split('۰').join('0');
    }
    function digitGroup(num) {
        return num.toLocaleString();
    }
    var packageJson;
    var reportName = "mostamarri";
    var loaddata = false;
    if (document.addEventListener) {
        document.addEventListener("DOMContentLoaded", init, false);
    }
    else {
        document.attachEvent("onDOMContentLoaded", init);
    }
    function init(){
        paging();

        $.get('/JsonData/GetData?typeData=100025', function (data) {
            var jsonData = JSON.parse(data);
            var strCombo = '<option value="">لطفا انتخاب کنید</option>';
            for (var i = 0; i < jsonData.length; i++) {
                strCombo += '<option value="' + jsonData[i].ProvinceID+ '">' + jsonData[i].Name + '</option>';

            }
            $('#ProvinceId').html(strCombo);
            $('#ProvinceId').on('change', function () {
                $('#holder_city_id').html('<option value="">لطفا صبر کنید</option>');
                $.get('/JsonData/GetData?typeData=100026&key1=' + $('#ProvinceId').val(), function (data) {
                    var jsonData = JSON.parse(data);
                    var strCombo = '<option value="">لطفا انتخاب کنید</option>';
                    for (var i = 0; i < jsonData.length; i++) {
                        strCombo += '<option value="' + jsonData[i].id.toString()  + '">' + jsonData[i].CityName + '</option>';
                    }
                    $('#holder_city_id').html(strCombo);
                    if (glob_CityId > 0) {
                        $('#holder_city_id').val(glob_CityId);
                        $('#holder_city_id').trigger('change');

                    }
                });

            });

        });
        $.get('/JsonData/GetData?typeData=100028&key1=' + lifeType, function (data) {
            var jsonData = JSON.parse(data);
            packageJson = jsonData;
            //var planLinkUrl = "/life/life.pdf";
            var strCombo = '<option value="">لطفا انتخاب کنید</option>';
            for (var i = 0; i < jsonData.length; i++) {
                strCombo += '<option value="' + jsonData[i].LifeVoucherPackageId.toString() + '">' + jsonData[i].Title + '</option>';
                //if (jsonData[i].PdfAddress)
                //    planLinkUrl = jsonData[i].PdfAddress;
            }
            //$('#plan-Link-Url').attr("href", planLinkUrl);
            $('#package_id').html(strCombo);
            $('#PayCountInYear').html('<option value="">لطفا انتخاب کنید</option>');
            $('#package_id').on('change', LoadPayType);
        });
        $('#payer_Military_Service').on('change', function () {
            if ($('#payer_Military_Service').val() == 3) {
                $('#payer_Military_Service_Reason').parent().show();
                $('#payer_Military_Service_Reason').attr('required','');
            } else {
                $('#payer_Military_Service_Reason').parent().hide();
                $('#payer_Military_Service_Reason').removeAttr('required');
            }
        });
        $('#payer_IsMan').on('change', function () {
            if ($('#payer_IsMan').val()=="1") {
                $('#payer_Military_Service').parent().show();
                $('#payer_Military_Service').attr('required', '');
                $('#payer_Military_Service').trigger('change');
            } else {
                $('#payer_Military_Service').parent().hide();
                $('#payer_Military_Service').removeAttr('required');
                $('#payer_Military_Service_Reason').parent().hide();
            }
        });
        $('#payer_FatherIsAlive').on('change', function () {
            if ($('#payer_FatherIsAlive').val() == "1" ||  !$('#payer_FatherIsAlive').val()) {
                $('#payer_FatherAge').parent().find('label').html('سن پدر');
                $('#payer_FatherReasonOfDead').parent().hide();
                $('#payer_FatherReasonOfDead').removeAttr('required');
            } else {
                $('#payer_FatherAge').parent().find('label').html('سن فوت پدر');
                $('#payer_FatherReasonOfDead').parent().show();
                $('#payer_FatherReasonOfDead').attr('required', '');
            }
        });
        $('#payer_MotherIsAlive').on('change', function () {
            if ($('#payer_MotherIsAlive').val()=="1" || !$('#payer_MotherIsAlive').val()) {
                $('#payer_MotherReasonOfDead').parent().hide();
                $('#payer_MotherAge').parent().find('label').html('سن مادر');
                $('#payer_MotherReasonOfDead').removeAttr('required');
            } else {
                $('#payer_MotherReasonOfDead').parent().show();
                $('#payer_MotherAge').parent().find('label').html('سن فوت مادر');
                $('#payer_MotherReasonOfDead').attr('required', '');
            }
        });
        $('#payer_MotherIsAlive').trigger('change');
        $('#payer_FatherIsAlive').trigger('change');
        $('#payer_IsMan').trigger('change');
        $('#payer_Military_Service').trigger('change');

        $('#Insured_Military_Service').on('change', function () {
            if ($('#Insured_Military_Service').val() == 3) {
                $('#Insured_Military_Service_Reason').parent().show();
                $('#Insured_Military_Service_Reason').attr('required','');
            } else {
                $('#Insured_Military_Service_Reason').parent().hide();
                $('#Insured_Military_Service_Reason').removeAttr('required');
            }
        });
        $('#Insured_IsMan').on('change', function () {
            if ($('#Insured_IsMan').val()=="1") {
                $('#Insured_Military_Service').parent().show();
                $('#Insured_Military_Service').attr('required', '');
                $('#Insured_Military_Service').trigger('change');
            } else {
                $('#Insured_Military_Service').parent().hide();
                $('#Insured_Military_Service').removeAttr('required');
                $('#Insured_Military_Service_Reason').parent().hide();
            }
        });
        $('#Insured_FatherIsAlive').on('change', function () {
            if ($('#Insured_FatherIsAlive').val()=="1" || !$('#Insured_FatherIsAlive').val()) {
                $('#Insured_FatherAge').parent().find('label').html('سن پدر');
                $('#Insured_FatherReasonOfDead').parent().hide();
                $('#Insured_FatherReasonOfDead').removeAttr('required');
            } else {
                $('#Insured_FatherReasonOfDead').parent().show();
                $('#Insured_FatherReasonOfDead').attr('required', '');
                $('#Insured_FatherAge').parent().find('label').html('سن فوت پدر');
            }
        });
        $('#Insured_MotherIsAlive').on('change', function () {
            if ($('#Insured_MotherIsAlive').val()=="1" || !$('#Insured_MotherIsAlive').val()) {
                $('#Insured_MotherReasonOfDead').parent().hide();
                $('#Insured_MotherReasonOfDead').removeAttr('required');
                $('#Insured_MotherAge').parent().find('label').html('سن مادر');
            } else {
                $('#Insured_MotherReasonOfDead').parent().show();
                $('#Insured_MotherReasonOfDead').attr('required', '');
                $('#Insured_MotherAge').parent().find('label').html('سن فوت مادر');
            }
        });
        $('#Insured_taking_medicine').on('change', function () {
            if ($('#Insured_taking_medicine').prop("checked") == false) {
                $('#Insured_taking_medicine_names').parent().hide();
                $('#Insured_taking_medicine_names').removeAttr('required');
            } else {
                $('#Insured_taking_medicine_names').parent().show();
                $('#Insured_taking_medicine_names').attr('required', '');
            }
        });
        $('#payer_taking_medicine').on('change', function () {
            if ($('#payer_taking_medicine').prop("checked") == false) {
                $('#payer_taking_medicine_names').parent().hide();
                $('#payer_taking_medicine_names').removeAttr('required');
            } else {
                $('#payer_taking_medicine_names').parent().show();
                $('#payer_taking_medicine_names').attr('required', '');
            }
        });
        $('#Insured_taking_medicine').trigger('change');
        $('#payer_taking_medicine').trigger('change');
        $('#Insured_MotherIsAlive').trigger('change');
        $('#Insured_FatherIsAlive').trigger('change');
        $('#Insured_IsMan').trigger('change');
        $('#Insured_Military_Service').trigger('change');

        //$('#beforeCustomer').on('change', function () {
        //    if ($('#beforeCustomer').prop('checked')) {
        //        $('#forMySelf').prop('checked', false);
        //        $('#befDiv').show();
        //        if (loaddata == false) {
        //            $.get('/JsonData/GetBeforeData?forProduct=' + reportName, function (data) {
        //                var jsonData = JSON.parse(data);
        //                var strCombo = '<option value="">لطفا انتخاب کنید</option>';
        //                if (jsonData.length == 0)
        //                    strCombo = '<option value="">خرید قبلی ندارید</option>';
        //                for (var i = 0; i < jsonData.length; i++) {
        //                    strCombo += '<option value="' + i.toString() + '">' + jsonData[i].name + "-" + jsonData[i].holder_mobile + "-" + jsonData[i].holder_phone + '</option>';

        //                }
        //                $('#beforeSelect').html(strCombo);
        //                $('#beforeSelect').on('change', function () {
        //                    var index = $('#beforeSelect').val();
        //                    if (index) {
        //                        $('#NationalCode').val(jsonData[index].NationalCode);
        //                        showLoadedData(jsonData[index])
        //                    }
        //                });
        //            });
        //        }
        //    } else {
        //        $('#befDiv').hide();
        //    }
        //});

        //$('#forMySelf').on('change', function () {
        //    if ($('#forMySelf').prop('checked')) {
        //        $('#beforeCustomer').prop('checked', false);
        //        $('#beforeCustomer').trigger('change');
        //        $.post('/Sale/MyselfData', { forProduct: reportName }, function (data) {
        //            if (data) {
        //                var jsonData = JSON.parse(data.data);
        //                //var jsonData = new JSON.parse(data.toString().substring(1, data.length - 2));

        //                //var jsonData = JSON.parse(data);
        //                if (jsonData.length > 0) {
        //                    showLoadedData(jsonData[0])
        //                }
        //            }
        //        });
        //    }
        //});

        //document.addEventListener("DOMContentLoaded", function (event) {
        try {
            $('.jalaliDatePicker').remove();
            $('.persian-date').each(function (index, elem) {
                if ($(this).val())
                    ;
                else
                    $(this).val('1360/06/15');
                $(this).ShamsiDatePicker(false);
            });
        } catch (e) {

        }
        $('#sick').on('change', function () {
            if ($(this).prop('checked'))
                $('#sickesList').show();
            else
                $('#sickesList').hide();
        })
        $('#sick2').on('change', function () {
            if ($(this).prop('checked'))
                $('#sickesList_2').show();
            else
                $('#sickesList_2').hide();
        })
        $('#payer_national_code').on('change', function () {
            if (validateNationalCode($('#payer_national_code').val()) == false) {
                CheckValidity($('#payer_national_code')[0], true, 'کد ملی صحیح نیست');
            }
            //$('#NationalCode').setCustomValidity("کد ملی صحیح نیست");

            //alert('کد ملی صحیح نیست');
        });
        $('#Insured_national_code').on('change', function () {
            if (validateNationalCode($('#Insured_national_code').val()) == false) {
                CheckValidity($('#payer_national_code')[0], true, 'کد ملی صحیح نیست');
            }
            //$('#NationalCode').setCustomValidity("کد ملی صحیح نیست");

            //alert('کد ملی صحیح نیست');
        });

        $('form').submit(function (e) {
            if ($('#Payer_Insurancer_Is_One').prop('checked')) {
                Payer_Insurancer_Is_One_So_equal_fields();
            }
            $('form input[type=number],form input[type=text]').each(function () {
                if ($(this).val())
                    $(this).val(getEngNumber($(this).val()));
            });

            $('.persian-date').each(function (index, elem) {
                var isValid = $(this).ShamsiDatePickerValidate();
                if (isValid == true) {

                } else {
                    e.preventDefault();
                    CheckValidity(this, true, isValid);
                    $(this).focus();
                }
            });
            if ($('#payer_job_id').val() && ($('#payer_job_id').val().trim() == 'آزاد' || $('#payer_job_id').val().trim() == 'ازاد')) {
                e.preventDefault();
                CheckValidity($('#payer_job_id')[0], true, 'لطفا عنوان شغل آزاد خود را مطرح نمایید');
            }else if ($('#Insured_job_id').val() && ($('#Insured_job_id').val().trim() == 'آزاد' || $('#Insured_job_id').val().trim() == 'ازاد')) {
                e.preventDefault();
                CheckValidity($('#Insured_job_id')[0], true, 'لطفا عنوان شغل آزاد خود را مطرح نمایید');
            }

            if (validateNationalCode($('#payer_national_code').val()) == false) {
                CheckValidity($('#payer_national_code')[0], true, 'کد ملی صحیح نیست');
                e.preventDefault();
            }
            if (validateNationalCode($('#Insured_national_code').val()) == false) {
                CheckValidity($('#Insured_national_code')[0], true, 'کد ملی صحیح نیست');
                e.preventDefault();
            }
            if (getAge() > 65) {
                CheckValidity($('#SecondFieldset .persian-date')[0], true, 'بیمه فقط برای افراد کمتر از 65 سال صادر می شود');
                e.preventDefault();
            }
            $('#payer_birth_year').val(getEngNumber($('#payer_birth_year').val()));
            $('#Insured_birth_year').val(getEngNumber($('#Insured_birth_year').val()));
            var sickList = false;
            var sickElem;
            $('[name=sickesList]').each(function () {
                sickList = sickList || $(this).prop('checked');
                if ($(this).prop('checked'))
                    sickElem = this;
            });
            if (sickList) {
                CheckValidity(sickElem, true, 'در صورت وجود هر یک از بیماری های گفته شده امکان خرید بیمه وجود ندارد');
                e.preventDefault();
            }
        });
        var SearchPersonclick = false;
        $('#SearchPerson').on('click', function () {
            SearchPersonclick = true;
            $('#btn-nex').trigger('click');
            SearchPersonclick = false;
            $('#FirstFieldset input').each(function () {
                if (!$(this).attr('type') || $(this).attr('type') == "text" || $(this).attr('type') == "number")
                    $(this).val('');
                else if (!$(this).attr('type') || $(this).attr('type') == "checkbox") {
                    $(this).prop('checked', false)
                    $(this).trigger('change');
                }
            });
            $('#FirstFieldset select').each(function () {
                $(this).val('');
                $(this).trigger('change');
            });
            $('#payer_national_code').val($('#searchNationalCode').val());
            $.get('/JsonData/GetData?typeData=100027&key10=' + $('#searchNationalCode').val(), function (data) {
                var jsonData = JSON.parse(data);
                showLoadedData(jsonData, 'payer');
                $('.jalaliDatePicker').remove();

                $('.persian-date').each(function (index, elem) {
                    if ($(this).val())
                        ;
                    else
                        $(this).val('1360/06/15');
                    $(this).ShamsiDatePicker(false);
                });
            });

        });
        $('#Insured_SearchPerson').on('click', function () {
            SearchPersonclick = true;
            $('#btn-nex').trigger('click');
            SearchPersonclick = false;
            $('#SecondFieldset input').each(function () {
                if (!$(this).attr('type') || $(this).attr('type') == "text" || $(this).attr('type') == "number")
                    $(this).val('');
                else if (!$(this).attr('type') || $(this).attr('type') == "checkbox") {
                    $(this).prop('checked', false)
                    $(this).trigger('change');
                }
            });
            $('#SecondFieldset select').each(function () {
                $(this).val('');
                $(this).trigger('change');
            });
            $('#Insured_national_code').val($('#Insured_searchNationalCode').val());
            $.get('/JsonData/GetData?typeData=100027&key10=' + $('#Insured_searchNationalCode').val(), function (data) {
                var jsonData = JSON.parse(data);
                showLoadedData(jsonData, 'Insured')

                $('.jalaliDatePicker').remove();
                $('.persian-date').each(function (index, elem) {
                    if ($(this).val())
                        ;
                    else
                        $(this).val('1360/06/15');
                    $(this).ShamsiDatePicker(false);
                });
            });
        });
        $('#Payer_Insurancer_Is_One').on('change', function () {
            if ($('#Payer_Insurancer_Is_One').prop('checked')) {
                $('#FirstFieldset legend').html("اطلاعات فرد");
                //$('#SecondFieldset').hide();
                $('#relation').val('');
                $('#relation').parent().hide('');
                $('#relation').removeAttr('required');
                $('#SecondFieldset input').removeAttr('required');
                $('#SecondFieldset select').removeAttr('required');
            } else {
                $('#FirstFieldset legend').html("اطلاعات بیمه کننده");
                //$('#SecondFieldset').show();
                $('#relation').parent().show('');
                $('#relation').attr('required', '');
                $('#SecondFieldset input').attr('required', '');
                $('#SecondFieldset select').attr('required', '');
            }

        });
        $('#Payer_Insurancer_Is_One').trigger('change');
        $('#Payer_Insurancer_Is_One').trigger('change');
        $('#btn-bef').on('click', function () {
            if (pageInd == 6 && $('#Payer_Insurancer_Is_One').prop('checked'))
                pageInd-=2;
            pageInd--;
            if (pageInd < 0)
                pageInd = 0;
            paging();
        });
        $('#btn-nex').on('click', function () {
            if (validationPaging() == false) {
                return;
            }
            if (pageInd == 1) {
                if ($("#payer_national_code").val())
                    ;
                else {
                    if (SearchPersonclick == false) {
                        $("#SearchPerson").trigger("click");
                        return;
                    }
                }
            }
            if (pageInd == 4) {
                if ($("#Insured_national_code").val())
                    ;
                else {
                    if (SearchPersonclick == false) {
                        $("#Insured_SearchPerson").trigger("click");
                        return;
                    }
                }
            }
            if (pageInd == 3 && $('#Payer_Insurancer_Is_One').prop('checked'))
                pageInd+=2;
            pageInd++;
            if (pageInd > 6)
                pageInd=6
            paging();
        });
        $('#btn-pay').on('click', function () {
            if(validationPaging())
                $('form').submit();
        });
        try {

            $('select:not(.sample)').select2({
                minimumInputLength: 0 // only start searching when the user has input 3 or more characters
            });
        } catch (e) {

        }
    }
    function LoadPayType() {
        var id = $('#package_id').val();
        var i = 0;
        for (; i < packageJson.length; i++) {
            if (packageJson[i].LifeVoucherPackageId == id) {
                var strCombo = '<option value="">لطفا انتخاب کنید</option>';
                var ssta ='';
                if (packageJson[i].OneYearAmount) {
                    strCombo += '<option value="1">سالانه</option>';
                    ssta += '<div class="col-12 mb-3" style="display: none;" id="s1"><div class="border text-center rounded py-2">سالانه : ' + digitGroup(packageJson[i].OneYearAmount) + ' ریال</div></div>';
                }
                if (packageJson[i].SixMonthAmount) {
                    strCombo += '<option value="2">شش ماهه </option>';
                    ssta += '<div class="col-12 mb-3" style="display: none;" id="s2"><div class="border text-center rounded py-2">شش ماه : ' + digitGroup(packageJson[i].SixMonthAmount) + ' ریال</div></div>';
                }
                if (packageJson[i].ThirdMonthAmount) {
                    strCombo += '<option value="4">سه ماهه</option>';
                    ssta += '<div class="col-12 mb-3" style="display: none;" id="s4"><div class="border text-center rounded py-2">سه ماه : ' + digitGroup(packageJson[i].ThirdMonthAmount) + ' ریال</div></div>';
                }
                if (packageJson[i].OneMonthAmount) {
                    strCombo += '<option value="12">ماهانه</option>';
                    ssta += '<div class="col-12 mb-3" style="display: none;" id="s12"><div class="border text-center rounded py-2">ماهانه : ' + digitGroup(packageJson[i].OneMonthAmount) + ' ریال</div></div>';
                }
                $('#PayCountInYear').html(strCombo);
                
                break;
            }
        }


        var data = '<div class="row">' 
            + ssta
            + '</div>'
            + '<div id="accordion">'
            + '<div class="card">'
            + '<div class="card-header" id="headingz">'
            + '<button class="cbtn collapsed" data-toggle="collapse" data-target="#collapsez" aria-expanded="false" aria-controls="collapseTwo">'
            + packageJson[i].Title 
            + '<span class="carr"><i class="icon-arrow-down"></i></span>'
            + '</button>'
            + '</div>'
            + '<div id="collapsez" class="collapse" aria-labelledby="headingz" data-parent="#accordion">'
            + '<div class="card-body">'
            
            + '<div class="insurance row">'
            + '        <div class="col-sm-6 col-sm-offset-3">'
            + '            <div class="cl-right">مبلغ:<div class="cl-left">' + digitGroup(packageJson[i].OneYearAmount) + 'ريال </div></div>'
            + '        </div>'
            + '        <div class="col-sm-6 col-sm-offset-3">'
            + '            <div class="cl-right">نوع بیمه:<div class="cl-left">' + digitGroup(packageJson[i].Title) + '</div></div>'
            + '        </div>'
            + '        <div class="col-sm-6 col-sm-offset-3">'
            + '            <div class="cl-right">سرمایه فوت به هر علت در شروع بیمه نامه:<div class="cl-left">' + digitGroup(packageJson[i].Death) + 'ريال </div></div>'
            + '        </div>'
            + '        <div class="col-sm-6 col-sm-offset-3">'
            + '            <div class="cl-right">سرمایه فوت در اثر حادثه در شروع بیمه نامه:<div class="cl-left">' + digitGroup(packageJson[i].Accident) + 'ريال </div></div>'
            + '        </div>'
            + '        <div class="col-sm-6 col-sm-offset-3">'
            + '            <div class="cl-right">سرمایه نقص عضو در شروع بیمه نامه:<div class="cl-left">' + digitGroup(packageJson[i].Disability) + 'ريال </div></div>'
            + '        </div>'
            + '        <div class="col-sm-6 col-sm-offset-3">'
            + '            <div class="cl-right">سرمایه های هزینه پزشکی در شروع بیمه نامه:<div class="cl-left">' + digitGroup(packageJson[i].Doctor) + 'ريال </div></div>'
            + '        </div>'
            + '        <div class="col-sm-6 col-sm-offset-3">'
            + '            <div class="cl-right">سرمایه های امراض خاص در شروع بیمه نامه:<div class="cl-left">' + digitGroup(packageJson[i].Special) + 'ريال </div></div>'
            + '        </div>'
            + '        <div class="col-sm-6 col-sm-offset-3">'
            + '            <div class="cl-right">سقف هزینه های پزشکی:<div class="cl-left">' + digitGroup(packageJson[i].UptoDoctor) + 'ريال </div></div>'
            + '        </div>'
            + '        <div class="col-sm-6 col-sm-offset-3">'
            + '            <div class="cl-right">سقف پوشش امراض خاص:<div class="cl-left">' + digitGroup(packageJson[i].UptoSpecial) + 'ريال تا سن 60 سالگی</div></div>'
            + '        </div>'
            + '        <div class="col-sm-6 col-sm-offset-3">'
            + '            <div class="cl-right">پوشش معافیت از پرداخت حق بیمه :<div class="cl-left">دارد (در صورت از کار افتادگی دائم و کامل به هر علت بیمه کننده)</div></div>'
            + '        </div>'
            + '        <div class="col-sm-6 col-sm-offset-3">'
            + '            <div class="cl-right">پوشش دریافت مستمری در صورت از کار افتادگی :<div class="cl-left">دارد ( به میزان 2 برابر حق بیمه پرداختی هر سال)</div></div>'
            + '        </div>'
            + '        <div class="col-sm-6 col-sm-offset-3">'
            + '            <div class="cl-right">اندوخته مالی بر مبنی متوسط سنوات گذشته :<div class="cl-left"></div></div>'
            + '        </div>'+
            (packageJson[i].In5Years ?
             '        <div class="col-sm-6 col-sm-offset-3">'
            + '            <div class="cl-right">5 سال :<div class="cl-left">' + digitGroup(packageJson[i].In5Years) +' ريال </div></div>'
            + '        </div>'
                : "")+
            (packageJson[i].In10Years ?
             '        <div class="col-sm-6 col-sm-offset-3">'
            + '            <div class="cl-right">10 سال :<div class="cl-left">' + digitGroup(packageJson[i].In10Years) +' ريال </div></div>'
            + '        </div>'
                : "")+
            (packageJson[i].In15Years ?
             '        <div class="col-sm-6 col-sm-offset-3">'
            + '            <div class="cl-right">15 سال :<div class="cl-left">' + digitGroup(packageJson[i].In15Years) +' ريال </div></div>'
            + '        </div>'
                : "")+
            (packageJson[i].In20Years ?
             '        <div class="col-sm-6 col-sm-offset-3">'
            + '            <div class="cl-right">20 سال :<div class="cl-left">' + digitGroup(packageJson[i].In20Years) +' ريال </div></div>'
            + '        </div>'
                : "")+
            (packageJson[i].In25Years ?
             '        <div class="col-sm-6 col-sm-offset-3">'
            + '            <div class="cl-right">25 سال :<div class="cl-left">' + digitGroup(packageJson[i].In25Years) +' ريال </div></div>'
            + '        </div>'
                : "")+
            (packageJson[i].In30Years ?
                 '        <div class="col-sm-6 col-sm-offset-3">'
                + '            <div class="cl-right">30 سال :<div class="cl-left">' + digitGroup(packageJson[i].In30Years) + ' ريال </div></div>'
                + '        </div>'
                : "")
            + '    </div></div></div></div>';

            $(document).ready(function(){
            $('#PayCountInYear').on('change', function(){
                var demovalue = $(this).val(); 
                $("#s1").hide();
                $("#s2").hide();
                $("#s4").hide();
                $("#s12").hide();
                $("#s"+demovalue).show();
            });
        });

        $('#ins-desc').html(data);
    }

    

    function showLoadedData(data, who) {
        if (data && data.length > 0)
            data = data[0];
        else
            data = {};
        if (who == 'payer') {
            if (data.payer_name) {
                $('#payer_name').val(data.payer_name);
                $('#payer_name').attr('readonly', "");
            } else {
                $('#payer_name').removeAttr("readonly")
            }
            if (data.payer_lastname) {
                $('#payer_lastname').val(data.payer_lastname);
                $('#payer_lastname').attr('readonly', "");
            } else {
                $('#payer_lastname').removeAttr("readonly")
            }
            if (data.payer_national_code)
                $('#payer_national_code').val(data.payer_national_code);
            if (data.payer_IsMan) {
                $('#payer_IsMan').val(data.payer_IsMan ? 1 : 0);
                $('#payer_IsMan').trigger('change');
            }
            if (data.payer_Insured_relation)
                $('#relation').val(data.payer_Insured_relation);
            if (data.payer_city_id)
                glob_CityId = data.payer_city_id;
            if (data.payer_province_id) {
                $('#ProvinceId').val(data.payer_province_id);
                $('#ProvinceId').trigger('change');
            }
            if (data.payer_Military_Service) {
                $('#payer_Military_Service').val(data.payer_Military_Service);
                $('#payer_Military_Service').trigger('change');
            }
            if (data.payer_Military_Service_Reason)
                $('#payer_Military_Service_Reason').val(data.payer_Military_Service_Reason);
            if (data.payer_FatherIsAlive) {
                $('#payer_FatherIsAlive').val(data.payer_FatherIsAlive ? 1 : 0);
                $('#payer_FatherIsAlive').trigger('change');
            }
            if (data.payer_FatherAge)
                $('#payer_FatherAge').val(data.payer_FatherAge);
            if (data.payer_FatherReasonOfDead)
                $('#payer_FatherReasonOfDead').val(data.payer_FatherReasonOfDead);
            if (data.payer_MotherIsAlive) {
                $('#payer_MotherIsAlive').val(data.payer_MotherIsAlive ? 1 : 0);
                $('#payer_MotherIsAlive').trigger('change');
            }
            if (data.payer_MotherAge)
                $('#payer_MotherAge').val(data.payer_MotherAge);
            if (data.payer_MotherReasonOfDead)
                $('#payer_MotherReasonOfDead').val(data.payer_MotherReasonOfDead);
            if (data.payer_birth_year)
                $('#payer_birth_year').val(data.payer_birth_year);
            if (data.payer_job_id) {
                $('#payer_job_id').val(data.payer_job_id);
                $('#payer_job_id').trigger('change');
            }
            if (data.payer_mobile)
                $('#payer_mobile').val(data.payer_mobile);
            if (data.payer_mobile)
                $('#payer_mobile').val(data.payer_mobile);
            if (data.payer_address)
                $('#payer_address').val(data.payer_address);
            if (data.payer_postal_code)
                $('#payer_postal_code').val(data.payer_postal_code.trim());
            if (data.payer_weight)
                $('#payer_weight').val(data.payer_weight);
            if (data.payer_height)
                $('#payer_height').val(data.payer_height);

            if (data.payer_phone)
                $('#payer_phone').val(data.payer_phone);
            if (data.payer_Sport) {
                $('#payer_Sport').prop('checked', data.payer_Sport);
                $('#payer_Sport').trigger('change');
            }
            if (data.payer_Cigarette) {
                $('#payer_Cigarette').prop('checked', data.payer_Cigarette);
                $('#payer_Cigarette').trigger('change');
            }
            if (data.payer_Motor) {
                $('#payer_Motor').prop('checked', data.payer_Motor);
                $('#payer_Motor').trigger('change');
            }
            if (data.payer_taking_medicine) {
                $('#payer_taking_medicine').prop('checked', data.payer_taking_medicine);
                $('#payer_taking_medicine').trigger('change');
            }
            if (data.payer_taking_medicine_names) {
                $('#payer_taking_medicine_names').val(data.payer_taking_medicine_names);
            }
            /*
             *
		   ,payer_has_disability
			,payer_has_operation
			,payer_has_breath
			,payer_has_family_sickness
			,payer_has_care_doctor
			,Insured_has_disability
			,Insured_has_operation
			,Insured_has_breath
			,Insured_has_family_sickness
			,Insured_has_care_doctor
             */ 
            var spSick = false;
            if (data.payer_has_disability) {
                $('[name=payer_has_disability]').prop('checked', true);
                spSick = true;
            }
            if (data.payer_has_operation) {
                $('[name=payer_has_operation]').prop('checked', true);
                spSick = true;
            }
            if (data.payer_has_breath) {
                $('[name=payer_has_breath]').prop('checked', true);
                spSick = true;
            }
            if (data.payer_has_family_sickness) {
                $('[name=payer_has_family_sickness]').prop('checked', true);
                spSick = true;
            }
            if (data.payer_has_care_doctor) {
                $('[name=payer_has_care_doctor]').prop('checked', true);
                spSick = true;
            }
            if (spSick) {
                $('#sick').prop('checked', true);
                $('#sick').trigger('change');
            }
        }
        else {

            if (data.payer_name) {
                $('#Insured_name').val(data.payer_name);
                $('#Insured_name').attr('readonly', "");
            } else {
                $('#Insured_name').removeAttr("readonly")
            }
            if (data.payer_lastname) {
                $('#Insured_lastname').val(data.payer_lastname);
                $('#Insured_lastname').attr('readonly', "");
            } else {
                $('#Insured_lastname').removeAttr("readonly")
            }
            if (data.payer_national_code)
                $('#Insured_national_code').val(data.payer_national_code);
            if (data.payer_IsMan) {
                $('#Insured_IsMan').val(data.payer_IsMan ? 1 : 0);
                $('#Insured_IsMan').trigger('change');
            }
            if (data.payer_Military_Service) {
                $('#Insured_Military_Service').val(data.payer_Military_Service);
                $('#Insured_Military_Service').trigger('change');
            }
            if (data.payer_Military_Service_Reason) 
                $('#Insured_Military_Service_Reason').val(data.payer_Military_Service_Reason);
            if (data.payer_FatherIsAlive) {
                $('#Insured_FatherIsAlive').val(data.payer_FatherIsAlive ? 1 : 0);
                $('#Insured_FatherIsAlive').trigger('change');
            }
            if (data.payer_FatherAge)
                $('#Insured_FatherAge').val(data.payer_FatherAge);
            if (data.payer_FatherReasonOfDead)
                $('#Insured_FatherReasonOfDead').val(data.payer_FatherReasonOfDead);
            if (data.payer_MotherIsAlive) {
                $('#Insured_MotherIsAlive').val(data.payer_MotherIsAlive ? 1 : 0);
                $('#Insured_MotherIsAlive').trigger('change');
            }
            if (data.payer_MotherAge)
                $('#Insured_MotherAge').val(data.payer_MotherAge);
            if (data.payer_MotherReasonOfDead)
                $('#Insured_MotherReasonOfDead').val(data.payer_MotherReasonOfDead);
            if (data.payer_birth_year)
                $('#Insured_birth_year').val(data.payer_birth_year);
            if (data.payer_job_id) {
                $('#Insured_job_id').val(data.payer_job_id);
                $('#Insured_job_id').trigger('change');
            }
            if (data.payer_Sport) {
                $('#Insured_Sport').prop('checked', data.payer_Sport);
                $('#Insured_Sport').trigger('change');
            }
            if (data.payer_Cigarette) {
                $('#Insured_Cigarette').prop('checked', data.payer_Cigarette);
                $('#Insured_Cigarette').trigger('change');
            }
            if (data.payer_Motor) {
                $('#Insured_Motor').prop('checked', data.payer_Motor);
                $('#Insured_Motor').trigger('change');
            }
            if (data.payer_weight)
                $('#Insured_weight').val(data.payer_weight);
            if (data.payer_height)
                $('#Insured_height').val(data.payer_height);

            if (data.payer_taking_medicine) {
                $('#Insured_taking_medicine').prop('checked', data.payer_taking_medicine);
                $('#Insured_taking_medicine').trigger('change');
            }
            if (data.payer_taking_medicine_names) {
                $('#Insured_taking_medicine_names').val(data.payer_taking_medicine_names);
            }
            var spSick = false;
            if (data.payer_has_disability) {
                $('[name=Insured_has_disability]').prop('checked', true);
                spSick = true;
            }
            if (data.payer_has_operation) {
                $('[name=Insured_has_operation]').prop('checked', true);
                spSick = true;
            }
            if (data.payer_has_breath) {
                $('[name=Insured_has_breath]').prop('checked', true);
                spSick = true;
            }
            if (data.payer_has_family_sickness) {
                $('[name=Insured_has_family_sickness]').prop('checked', true);
                spSick = true;
            }
            if (data.payer_has_care_doctor) {
                $('[name=Insured_has_care_doctor]').prop('checked', true);
                spSick = true;
            }
            if (spSick) {
                $('#sick2').prop('checked', true);
                $('#sick2').trigger('change');
            }
        }
    }
</script>
